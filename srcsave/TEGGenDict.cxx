//
// File generated by rootcint at Tue Dec  6 13:13:53 2011

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIhomedIdglazierdIWorkdIclas12dIEdGendIsrcdIdITEGGenDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "TEGGenDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TEGParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGParticle(void *p = 0);
   static void *newArray_TEGParticle(Long_t size, void *p);
   static void delete_TEGParticle(void *p);
   static void deleteArray_TEGParticle(void *p);
   static void destruct_TEGParticle(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGParticle*)
   {
      ::TEGParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGParticle", ::TEGParticle::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGParticle.h", 21,
                  typeid(::TEGParticle), DefineBehavior(ptr, ptr),
                  &::TEGParticle::Dictionary, isa_proxy, 4,
                  sizeof(::TEGParticle) );
      instance.SetNew(&new_TEGParticle);
      instance.SetNewArray(&newArray_TEGParticle);
      instance.SetDelete(&delete_TEGParticle);
      instance.SetDeleteArray(&deleteArray_TEGParticle);
      instance.SetDestructor(&destruct_TEGParticle);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGParticle*)
   {
      return GenerateInitInstanceLocal((::TEGParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGDistribution_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGDistribution(void *p = 0);
   static void *newArray_TEGDistribution(Long_t size, void *p);
   static void delete_TEGDistribution(void *p);
   static void deleteArray_TEGDistribution(void *p);
   static void destruct_TEGDistribution(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGDistribution*)
   {
      ::TEGDistribution *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGDistribution >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGDistribution", ::TEGDistribution::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGDistribution.h", 13,
                  typeid(::TEGDistribution), DefineBehavior(ptr, ptr),
                  &::TEGDistribution::Dictionary, isa_proxy, 4,
                  sizeof(::TEGDistribution) );
      instance.SetNew(&new_TEGDistribution);
      instance.SetNewArray(&newArray_TEGDistribution);
      instance.SetDelete(&delete_TEGDistribution);
      instance.SetDeleteArray(&deleteArray_TEGDistribution);
      instance.SetDestructor(&destruct_TEGDistribution);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGDistribution*)
   {
      return GenerateInitInstanceLocal((::TEGDistribution*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGDistribution*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGDecay_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGDecay(void *p = 0);
   static void *newArray_TEGDecay(Long_t size, void *p);
   static void delete_TEGDecay(void *p);
   static void deleteArray_TEGDecay(void *p);
   static void destruct_TEGDecay(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGDecay*)
   {
      ::TEGDecay *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGDecay >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGDecay", ::TEGDecay::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGDecay.h", 14,
                  typeid(::TEGDecay), DefineBehavior(ptr, ptr),
                  &::TEGDecay::Dictionary, isa_proxy, 4,
                  sizeof(::TEGDecay) );
      instance.SetNew(&new_TEGDecay);
      instance.SetNewArray(&newArray_TEGDecay);
      instance.SetDelete(&delete_TEGDecay);
      instance.SetDeleteArray(&deleteArray_TEGDecay);
      instance.SetDestructor(&destruct_TEGDecay);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGDecay*)
   {
      return GenerateInitInstanceLocal((::TEGDecay*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGDecay*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGGenerator(void *p = 0);
   static void *newArray_TEGGenerator(Long_t size, void *p);
   static void delete_TEGGenerator(void *p);
   static void deleteArray_TEGGenerator(void *p);
   static void destruct_TEGGenerator(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGGenerator*)
   {
      ::TEGGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGGenerator", ::TEGGenerator::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGGenerator.h", 19,
                  typeid(::TEGGenerator), DefineBehavior(ptr, ptr),
                  &::TEGGenerator::Dictionary, isa_proxy, 4,
                  sizeof(::TEGGenerator) );
      instance.SetNew(&new_TEGGenerator);
      instance.SetNewArray(&newArray_TEGGenerator);
      instance.SetDelete(&delete_TEGGenerator);
      instance.SetDeleteArray(&deleteArray_TEGGenerator);
      instance.SetDestructor(&destruct_TEGGenerator);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGGenerator*)
   {
      return GenerateInitInstanceLocal((::TEGGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGOutput_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TEGOutput(void *p);
   static void deleteArray_TEGOutput(void *p);
   static void destruct_TEGOutput(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGOutput*)
   {
      ::TEGOutput *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGOutput >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGOutput", ::TEGOutput::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGOutput.h", 10,
                  typeid(::TEGOutput), DefineBehavior(ptr, ptr),
                  &::TEGOutput::Dictionary, isa_proxy, 4,
                  sizeof(::TEGOutput) );
      instance.SetDelete(&delete_TEGOutput);
      instance.SetDeleteArray(&deleteArray_TEGOutput);
      instance.SetDestructor(&destruct_TEGOutput);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGOutput*)
   {
      return GenerateInitInstanceLocal((::TEGOutput*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGOutput*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGDistDsigDOmega_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGDistDsigDOmega(void *p = 0);
   static void *newArray_TEGDistDsigDOmega(Long_t size, void *p);
   static void delete_TEGDistDsigDOmega(void *p);
   static void deleteArray_TEGDistDsigDOmega(void *p);
   static void destruct_TEGDistDsigDOmega(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGDistDsigDOmega*)
   {
      ::TEGDistDsigDOmega *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGDistDsigDOmega >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGDistDsigDOmega", ::TEGDistDsigDOmega::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGDistDsigDOmega.h", 9,
                  typeid(::TEGDistDsigDOmega), DefineBehavior(ptr, ptr),
                  &::TEGDistDsigDOmega::Dictionary, isa_proxy, 4,
                  sizeof(::TEGDistDsigDOmega) );
      instance.SetNew(&new_TEGDistDsigDOmega);
      instance.SetNewArray(&newArray_TEGDistDsigDOmega);
      instance.SetDelete(&delete_TEGDistDsigDOmega);
      instance.SetDeleteArray(&deleteArray_TEGDistDsigDOmega);
      instance.SetDestructor(&destruct_TEGDistDsigDOmega);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGDistDsigDOmega*)
   {
      return GenerateInitInstanceLocal((::TEGDistDsigDOmega*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGDistDsigDOmega*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGDecElElasticRad_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGDecElElasticRad(void *p = 0);
   static void *newArray_TEGDecElElasticRad(Long_t size, void *p);
   static void delete_TEGDecElElasticRad(void *p);
   static void deleteArray_TEGDecElElasticRad(void *p);
   static void destruct_TEGDecElElasticRad(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGDecElElasticRad*)
   {
      ::TEGDecElElasticRad *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGDecElElasticRad >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGDecElElasticRad", ::TEGDecElElasticRad::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGDecElElasticRad.h", 8,
                  typeid(::TEGDecElElasticRad), DefineBehavior(ptr, ptr),
                  &::TEGDecElElasticRad::Dictionary, isa_proxy, 4,
                  sizeof(::TEGDecElElasticRad) );
      instance.SetNew(&new_TEGDecElElasticRad);
      instance.SetNewArray(&newArray_TEGDecElElasticRad);
      instance.SetDelete(&delete_TEGDecElElasticRad);
      instance.SetDeleteArray(&deleteArray_TEGDecElElasticRad);
      instance.SetDestructor(&destruct_TEGDecElElasticRad);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGDecElElasticRad*)
   {
      return GenerateInitInstanceLocal((::TEGDecElElasticRad*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGDecElElasticRad*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGDecTwoBody_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGDecTwoBody(void *p = 0);
   static void *newArray_TEGDecTwoBody(Long_t size, void *p);
   static void delete_TEGDecTwoBody(void *p);
   static void deleteArray_TEGDecTwoBody(void *p);
   static void destruct_TEGDecTwoBody(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGDecTwoBody*)
   {
      ::TEGDecTwoBody *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGDecTwoBody >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGDecTwoBody", ::TEGDecTwoBody::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGDecTwoBody.h", 10,
                  typeid(::TEGDecTwoBody), DefineBehavior(ptr, ptr),
                  &::TEGDecTwoBody::Dictionary, isa_proxy, 4,
                  sizeof(::TEGDecTwoBody) );
      instance.SetNew(&new_TEGDecTwoBody);
      instance.SetNewArray(&newArray_TEGDecTwoBody);
      instance.SetDelete(&delete_TEGDecTwoBody);
      instance.SetDeleteArray(&deleteArray_TEGDecTwoBody);
      instance.SetDestructor(&destruct_TEGDecTwoBody);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGDecTwoBody*)
   {
      return GenerateInitInstanceLocal((::TEGDecTwoBody*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGDecTwoBody*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGReaction_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TEGReaction(void *p);
   static void deleteArray_TEGReaction(void *p);
   static void destruct_TEGReaction(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGReaction*)
   {
      ::TEGReaction *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGReaction >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGReaction", ::TEGReaction::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGReaction.h", 7,
                  typeid(::TEGReaction), DefineBehavior(ptr, ptr),
                  &::TEGReaction::Dictionary, isa_proxy, 4,
                  sizeof(::TEGReaction) );
      instance.SetDelete(&delete_TEGReaction);
      instance.SetDeleteArray(&deleteArray_TEGReaction);
      instance.SetDestructor(&destruct_TEGReaction);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGReaction*)
   {
      return GenerateInitInstanceLocal((::TEGReaction*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGReaction*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGDistDsigDt_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGDistDsigDt(void *p = 0);
   static void *newArray_TEGDistDsigDt(Long_t size, void *p);
   static void delete_TEGDistDsigDt(void *p);
   static void deleteArray_TEGDistDsigDt(void *p);
   static void destruct_TEGDistDsigDt(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGDistDsigDt*)
   {
      ::TEGDistDsigDt *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGDistDsigDt >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGDistDsigDt", ::TEGDistDsigDt::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGDistDsigDt.h", 8,
                  typeid(::TEGDistDsigDt), DefineBehavior(ptr, ptr),
                  &::TEGDistDsigDt::Dictionary, isa_proxy, 4,
                  sizeof(::TEGDistDsigDt) );
      instance.SetNew(&new_TEGDistDsigDt);
      instance.SetNewArray(&newArray_TEGDistDsigDt);
      instance.SetDelete(&delete_TEGDistDsigDt);
      instance.SetDeleteArray(&deleteArray_TEGDistDsigDt);
      instance.SetDestructor(&destruct_TEGDistDsigDt);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGDistDsigDt*)
   {
      return GenerateInitInstanceLocal((::TEGDistDsigDt*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGDistDsigDt*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGDistEScat_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGDistEScat(void *p = 0);
   static void *newArray_TEGDistEScat(Long_t size, void *p);
   static void delete_TEGDistEScat(void *p);
   static void deleteArray_TEGDistEScat(void *p);
   static void destruct_TEGDistEScat(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGDistEScat*)
   {
      ::TEGDistEScat *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGDistEScat >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGDistEScat", ::TEGDistEScat::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGDistEScat.h", 11,
                  typeid(::TEGDistEScat), DefineBehavior(ptr, ptr),
                  &::TEGDistEScat::Dictionary, isa_proxy, 4,
                  sizeof(::TEGDistEScat) );
      instance.SetNew(&new_TEGDistEScat);
      instance.SetNewArray(&newArray_TEGDistEScat);
      instance.SetDelete(&delete_TEGDistEScat);
      instance.SetDeleteArray(&deleteArray_TEGDistEScat);
      instance.SetDestructor(&destruct_TEGDistEScat);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGDistEScat*)
   {
      return GenerateInitInstanceLocal((::TEGDistEScat*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGDistEScat*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGElectroReaction_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGElectroReaction(void *p = 0);
   static void *newArray_TEGElectroReaction(Long_t size, void *p);
   static void delete_TEGElectroReaction(void *p);
   static void deleteArray_TEGElectroReaction(void *p);
   static void destruct_TEGElectroReaction(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGElectroReaction*)
   {
      ::TEGElectroReaction *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGElectroReaction >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGElectroReaction", ::TEGElectroReaction::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGElectroReaction.h", 7,
                  typeid(::TEGElectroReaction), DefineBehavior(ptr, ptr),
                  &::TEGElectroReaction::Dictionary, isa_proxy, 4,
                  sizeof(::TEGElectroReaction) );
      instance.SetNew(&new_TEGElectroReaction);
      instance.SetNewArray(&newArray_TEGElectroReaction);
      instance.SetDelete(&delete_TEGElectroReaction);
      instance.SetDeleteArray(&deleteArray_TEGElectroReaction);
      instance.SetDestructor(&destruct_TEGElectroReaction);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGElectroReaction*)
   {
      return GenerateInitInstanceLocal((::TEGElectroReaction*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGElectroReaction*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGOutAll_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGOutAll(void *p = 0);
   static void *newArray_TEGOutAll(Long_t size, void *p);
   static void delete_TEGOutAll(void *p);
   static void deleteArray_TEGOutAll(void *p);
   static void destruct_TEGOutAll(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGOutAll*)
   {
      ::TEGOutAll *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGOutAll >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGOutAll", ::TEGOutAll::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGOutAll.h", 12,
                  typeid(::TEGOutAll), DefineBehavior(ptr, ptr),
                  &::TEGOutAll::Dictionary, isa_proxy, 4,
                  sizeof(::TEGOutAll) );
      instance.SetNew(&new_TEGOutAll);
      instance.SetNewArray(&newArray_TEGOutAll);
      instance.SetDelete(&delete_TEGOutAll);
      instance.SetDeleteArray(&deleteArray_TEGOutAll);
      instance.SetDestructor(&destruct_TEGOutAll);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGOutAll*)
   {
      return GenerateInitInstanceLocal((::TEGOutAll*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGOutAll*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGOutGEMC_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGOutGEMC(void *p = 0);
   static void *newArray_TEGOutGEMC(Long_t size, void *p);
   static void delete_TEGOutGEMC(void *p);
   static void deleteArray_TEGOutGEMC(void *p);
   static void destruct_TEGOutGEMC(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGOutGEMC*)
   {
      ::TEGOutGEMC *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGOutGEMC >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGOutGEMC", ::TEGOutGEMC::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGOutGEMC.h", 9,
                  typeid(::TEGOutGEMC), DefineBehavior(ptr, ptr),
                  &::TEGOutGEMC::Dictionary, isa_proxy, 4,
                  sizeof(::TEGOutGEMC) );
      instance.SetNew(&new_TEGOutGEMC);
      instance.SetNewArray(&newArray_TEGOutGEMC);
      instance.SetDelete(&delete_TEGOutGEMC);
      instance.SetDeleteArray(&deleteArray_TEGOutGEMC);
      instance.SetDestructor(&destruct_TEGOutGEMC);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGOutGEMC*)
   {
      return GenerateInitInstanceLocal((::TEGOutGEMC*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGOutGEMC*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGOutLorentz_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGOutLorentz(void *p = 0);
   static void *newArray_TEGOutLorentz(Long_t size, void *p);
   static void delete_TEGOutLorentz(void *p);
   static void deleteArray_TEGOutLorentz(void *p);
   static void destruct_TEGOutLorentz(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGOutLorentz*)
   {
      ::TEGOutLorentz *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGOutLorentz >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGOutLorentz", ::TEGOutLorentz::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGOutLorentz.h", 10,
                  typeid(::TEGOutLorentz), DefineBehavior(ptr, ptr),
                  &::TEGOutLorentz::Dictionary, isa_proxy, 4,
                  sizeof(::TEGOutLorentz) );
      instance.SetNew(&new_TEGOutLorentz);
      instance.SetNewArray(&newArray_TEGOutLorentz);
      instance.SetDelete(&delete_TEGOutLorentz);
      instance.SetDeleteArray(&deleteArray_TEGOutLorentz);
      instance.SetDestructor(&destruct_TEGOutLorentz);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGOutLorentz*)
   {
      return GenerateInitInstanceLocal((::TEGOutLorentz*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGOutLorentz*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TEGPhotoReaction_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TEGPhotoReaction(void *p = 0);
   static void *newArray_TEGPhotoReaction(Long_t size, void *p);
   static void delete_TEGPhotoReaction(void *p);
   static void deleteArray_TEGPhotoReaction(void *p);
   static void destruct_TEGPhotoReaction(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TEGPhotoReaction*)
   {
      ::TEGPhotoReaction *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TEGPhotoReaction >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TEGPhotoReaction", ::TEGPhotoReaction::Class_Version(), "/home/dglazier/Work/clas12/EdGen/src//TEGPhotoReaction.h", 7,
                  typeid(::TEGPhotoReaction), DefineBehavior(ptr, ptr),
                  &::TEGPhotoReaction::Dictionary, isa_proxy, 4,
                  sizeof(::TEGPhotoReaction) );
      instance.SetNew(&new_TEGPhotoReaction);
      instance.SetNewArray(&newArray_TEGPhotoReaction);
      instance.SetDelete(&delete_TEGPhotoReaction);
      instance.SetDeleteArray(&deleteArray_TEGPhotoReaction);
      instance.SetDestructor(&destruct_TEGPhotoReaction);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TEGPhotoReaction*)
   {
      return GenerateInitInstanceLocal((::TEGPhotoReaction*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TEGPhotoReaction*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TEGParticle::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGParticle::Class_Name()
{
   return "TEGParticle";
}

//______________________________________________________________________________
const char *TEGParticle::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGParticle::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGParticle::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGParticle::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGParticle*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGDistribution::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGDistribution::Class_Name()
{
   return "TEGDistribution";
}

//______________________________________________________________________________
const char *TEGDistribution::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDistribution*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGDistribution::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDistribution*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGDistribution::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDistribution*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGDistribution::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDistribution*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGDecay::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGDecay::Class_Name()
{
   return "TEGDecay";
}

//______________________________________________________________________________
const char *TEGDecay::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDecay*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGDecay::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDecay*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGDecay::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDecay*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGDecay::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDecay*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGGenerator::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGGenerator::Class_Name()
{
   return "TEGGenerator";
}

//______________________________________________________________________________
const char *TEGGenerator::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGGenerator::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGGenerator::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGGenerator::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGGenerator*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGOutput::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGOutput::Class_Name()
{
   return "TEGOutput";
}

//______________________________________________________________________________
const char *TEGOutput::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGOutput*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGOutput::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGOutput*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGOutput::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGOutput*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGOutput::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGOutput*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGDistDsigDOmega::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGDistDsigDOmega::Class_Name()
{
   return "TEGDistDsigDOmega";
}

//______________________________________________________________________________
const char *TEGDistDsigDOmega::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDistDsigDOmega*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGDistDsigDOmega::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDistDsigDOmega*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGDistDsigDOmega::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDistDsigDOmega*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGDistDsigDOmega::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDistDsigDOmega*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGDecElElasticRad::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGDecElElasticRad::Class_Name()
{
   return "TEGDecElElasticRad";
}

//______________________________________________________________________________
const char *TEGDecElElasticRad::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDecElElasticRad*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGDecElElasticRad::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDecElElasticRad*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGDecElElasticRad::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDecElElasticRad*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGDecElElasticRad::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDecElElasticRad*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGDecTwoBody::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGDecTwoBody::Class_Name()
{
   return "TEGDecTwoBody";
}

//______________________________________________________________________________
const char *TEGDecTwoBody::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDecTwoBody*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGDecTwoBody::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDecTwoBody*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGDecTwoBody::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDecTwoBody*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGDecTwoBody::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDecTwoBody*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGReaction::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGReaction::Class_Name()
{
   return "TEGReaction";
}

//______________________________________________________________________________
const char *TEGReaction::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGReaction*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGReaction::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGReaction*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGReaction::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGReaction*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGReaction::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGReaction*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGDistDsigDt::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGDistDsigDt::Class_Name()
{
   return "TEGDistDsigDt";
}

//______________________________________________________________________________
const char *TEGDistDsigDt::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDistDsigDt*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGDistDsigDt::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDistDsigDt*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGDistDsigDt::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDistDsigDt*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGDistDsigDt::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDistDsigDt*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGDistEScat::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGDistEScat::Class_Name()
{
   return "TEGDistEScat";
}

//______________________________________________________________________________
const char *TEGDistEScat::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDistEScat*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGDistEScat::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGDistEScat*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGDistEScat::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDistEScat*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGDistEScat::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGDistEScat*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGElectroReaction::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGElectroReaction::Class_Name()
{
   return "TEGElectroReaction";
}

//______________________________________________________________________________
const char *TEGElectroReaction::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGElectroReaction*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGElectroReaction::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGElectroReaction*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGElectroReaction::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGElectroReaction*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGElectroReaction::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGElectroReaction*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGOutAll::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGOutAll::Class_Name()
{
   return "TEGOutAll";
}

//______________________________________________________________________________
const char *TEGOutAll::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGOutAll*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGOutAll::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGOutAll*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGOutAll::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGOutAll*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGOutAll::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGOutAll*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGOutGEMC::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGOutGEMC::Class_Name()
{
   return "TEGOutGEMC";
}

//______________________________________________________________________________
const char *TEGOutGEMC::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGOutGEMC*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGOutGEMC::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGOutGEMC*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGOutGEMC::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGOutGEMC*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGOutGEMC::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGOutGEMC*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGOutLorentz::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGOutLorentz::Class_Name()
{
   return "TEGOutLorentz";
}

//______________________________________________________________________________
const char *TEGOutLorentz::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGOutLorentz*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGOutLorentz::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGOutLorentz*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGOutLorentz::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGOutLorentz*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGOutLorentz::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGOutLorentz*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TEGPhotoReaction::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TEGPhotoReaction::Class_Name()
{
   return "TEGPhotoReaction";
}

//______________________________________________________________________________
const char *TEGPhotoReaction::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGPhotoReaction*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TEGPhotoReaction::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TEGPhotoReaction*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TEGPhotoReaction::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGPhotoReaction*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TEGPhotoReaction::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TEGPhotoReaction*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TEGGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGGenerator.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGGenerator::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGGenerator::Class(),this);
   }
}

//______________________________________________________________________________
void TEGGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGGenerator.
      TClass *R__cl = ::TEGGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSeed", &fSeed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNrun", &fNrun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fdbPDG", &fdbPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4Target", &fP4Target);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4Beam", &fP4Beam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4R", &fP4R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBeam", &fBeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTarget", &fTarget);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReaction", &fReaction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParticles", &fParticles);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProducts", &fProducts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutput", &fOutput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNEvents", &fNEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNEventi", &fNEventi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNParticle", &fNParticle);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGGenerator(void *p) {
      return  p ? new(p) ::TEGGenerator : new ::TEGGenerator;
   }
   static void *newArray_TEGGenerator(Long_t nElements, void *p) {
      return p ? new(p) ::TEGGenerator[nElements] : new ::TEGGenerator[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGGenerator(void *p) {
      delete ((::TEGGenerator*)p);
   }
   static void deleteArray_TEGGenerator(void *p) {
      delete [] ((::TEGGenerator*)p);
   }
   static void destruct_TEGGenerator(void *p) {
      typedef ::TEGGenerator current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGGenerator

//______________________________________________________________________________
void TEGParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGParticle::Class(),this);
   }
}

//______________________________________________________________________________
void TEGParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGParticle.
      TClass *R__cl = ::TEGParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPDG", &fPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDGcode", &fPDGcode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLifetime", &fLifetime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fParent", &fParent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4", &fP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPol", &fPol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertex", &fVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDecVertex", &fDecVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDecayParts", &fDecayParts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDecays", &fDecays);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNdecays", &fNdecays);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsDecay", &fIsDecay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsTrack", &fIsTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fForceDecay", &fForceDecay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCurrDecay", &fCurrDecay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBranchRatio", &fBranchRatio);
      R__insp.InspectMember(fBranchRatio, "fBranchRatio.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDist", &fDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMassDist", &fMassDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDecVertexTime", &fDecVertexTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDGMass", &fPDGMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDynamicMass", &fDynamicMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinMass", &fMinMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinThresh", &fMinThresh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxThresh", &fMaxThresh);
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGParticle(void *p) {
      return  p ? new(p) ::TEGParticle : new ::TEGParticle;
   }
   static void *newArray_TEGParticle(Long_t nElements, void *p) {
      return p ? new(p) ::TEGParticle[nElements] : new ::TEGParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGParticle(void *p) {
      delete ((::TEGParticle*)p);
   }
   static void deleteArray_TEGParticle(void *p) {
      delete [] ((::TEGParticle*)p);
   }
   static void destruct_TEGParticle(void *p) {
      typedef ::TEGParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGParticle

//______________________________________________________________________________
void TEGOutput::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGOutput.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGOutput::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGOutput::Class(),this);
   }
}

//______________________________________________________________________________
void TEGOutput::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGOutput.
      TClass *R__cl = ::TEGOutput::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFileName", &fFileName);
      R__insp.InspectMember(fFileName, "fFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGenerator", &fGenerator);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TEGOutput(void *p) {
      delete ((::TEGOutput*)p);
   }
   static void deleteArray_TEGOutput(void *p) {
      delete [] ((::TEGOutput*)p);
   }
   static void destruct_TEGOutput(void *p) {
      typedef ::TEGOutput current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGOutput

//______________________________________________________________________________
void TEGOutLorentz::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGOutLorentz.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGOutLorentz::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGOutLorentz::Class(),this);
   }
}

//______________________________________________________________________________
void TEGOutLorentz::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGOutLorentz.
      TClass *R__cl = ::TEGOutLorentz::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutTree", &fOutTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutFile", &fOutFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNVect", &fNVect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fp4", &fp4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fver", &fver);
      TEGOutput::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGOutLorentz(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGOutLorentz : new ::TEGOutLorentz;
   }
   static void *newArray_TEGOutLorentz(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGOutLorentz[nElements] : new ::TEGOutLorentz[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGOutLorentz(void *p) {
      delete ((::TEGOutLorentz*)p);
   }
   static void deleteArray_TEGOutLorentz(void *p) {
      delete [] ((::TEGOutLorentz*)p);
   }
   static void destruct_TEGOutLorentz(void *p) {
      typedef ::TEGOutLorentz current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGOutLorentz

//______________________________________________________________________________
void TEGOutGEMC::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGOutGEMC.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGOutGEMC::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGOutGEMC::Class(),this);
   }
}

//______________________________________________________________________________
void TEGOutGEMC::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGOutGEMC.
      TClass *R__cl = ::TEGOutGEMC::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutFile", (void*)&fOutFile);
      R__insp.InspectMember("ofstream", (void*)&fOutFile, "fOutFile.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReaction", &fReaction);
      TEGOutput::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGOutGEMC(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGOutGEMC : new ::TEGOutGEMC;
   }
   static void *newArray_TEGOutGEMC(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGOutGEMC[nElements] : new ::TEGOutGEMC[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGOutGEMC(void *p) {
      delete ((::TEGOutGEMC*)p);
   }
   static void deleteArray_TEGOutGEMC(void *p) {
      delete [] ((::TEGOutGEMC*)p);
   }
   static void destruct_TEGOutGEMC(void *p) {
      typedef ::TEGOutGEMC current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGOutGEMC

//______________________________________________________________________________
void TEGOutAll::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGOutAll.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGOutAll::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGOutAll::Class(),this);
   }
}

//______________________________________________________________________________
void TEGOutAll::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGOutAll.
      TClass *R__cl = ::TEGOutAll::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutFile", &fOutFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutTree", &fOutTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4s", &fP4s);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fVertices", &fVertices);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDGs[100]", fPDGs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNp", &fNp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOnlyTrackFinal", &fOnlyTrackFinal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReaction", &fReaction);
      TEGOutput::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGOutAll(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGOutAll : new ::TEGOutAll;
   }
   static void *newArray_TEGOutAll(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGOutAll[nElements] : new ::TEGOutAll[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGOutAll(void *p) {
      delete ((::TEGOutAll*)p);
   }
   static void deleteArray_TEGOutAll(void *p) {
      delete [] ((::TEGOutAll*)p);
   }
   static void destruct_TEGOutAll(void *p) {
      typedef ::TEGOutAll current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGOutAll

//______________________________________________________________________________
void TEGReaction::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGReaction.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGReaction::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGReaction::Class(),this);
   }
}

//______________________________________________________________________________
void TEGReaction::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGReaction.
      TClass *R__cl = ::TEGReaction::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInitial1", &fInitial1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fInitial2", &fInitial2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4I1", &fP4I1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4I2", &fP4I2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fW", &fW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBeamSpotSize", &fBeamSpotSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetLength", &fTargetLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTargetPos", &fTargetPos);
      R__insp.InspectMember(fTargetPos, "fTargetPos.");
      TEGParticle::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TEGReaction(void *p) {
      delete ((::TEGReaction*)p);
   }
   static void deleteArray_TEGReaction(void *p) {
      delete [] ((::TEGReaction*)p);
   }
   static void destruct_TEGReaction(void *p) {
      typedef ::TEGReaction current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGReaction

//______________________________________________________________________________
void TEGPhotoReaction::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGPhotoReaction.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGPhotoReaction::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGPhotoReaction::Class(),this);
   }
}

//______________________________________________________________________________
void TEGPhotoReaction::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGPhotoReaction.
      TClass *R__cl = ::TEGPhotoReaction::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEGReaction::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGPhotoReaction(void *p) {
      return  p ? new(p) ::TEGPhotoReaction : new ::TEGPhotoReaction;
   }
   static void *newArray_TEGPhotoReaction(Long_t nElements, void *p) {
      return p ? new(p) ::TEGPhotoReaction[nElements] : new ::TEGPhotoReaction[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGPhotoReaction(void *p) {
      delete ((::TEGPhotoReaction*)p);
   }
   static void deleteArray_TEGPhotoReaction(void *p) {
      delete [] ((::TEGPhotoReaction*)p);
   }
   static void destruct_TEGPhotoReaction(void *p) {
      typedef ::TEGPhotoReaction current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGPhotoReaction

//______________________________________________________________________________
void TEGElectroReaction::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGElectroReaction.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGElectroReaction::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGElectroReaction::Class(),this);
   }
}

//______________________________________________________________________________
void TEGElectroReaction::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGElectroReaction.
      TClass *R__cl = ::TEGElectroReaction::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGammaStar", &fGammaStar);
      TEGReaction::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGElectroReaction(void *p) {
      return  p ? new(p) ::TEGElectroReaction : new ::TEGElectroReaction;
   }
   static void *newArray_TEGElectroReaction(Long_t nElements, void *p) {
      return p ? new(p) ::TEGElectroReaction[nElements] : new ::TEGElectroReaction[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGElectroReaction(void *p) {
      delete ((::TEGElectroReaction*)p);
   }
   static void deleteArray_TEGElectroReaction(void *p) {
      delete [] ((::TEGElectroReaction*)p);
   }
   static void destruct_TEGElectroReaction(void *p) {
      typedef ::TEGElectroReaction current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGElectroReaction

//______________________________________________________________________________
void TEGDecay::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGDecay.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGDecay::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGDecay::Class(),this);
   }
}

//______________________________________________________________________________
void TEGDecay::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGDecay.
      TClass *R__cl = ::TEGDecay::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMother", &fMother);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4", &fP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProducts", &fProducts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4d", &fP4d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMd", &fMd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNd", &fNd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTcm", &fTcm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWt", &fWt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWtMax", &fWtMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fProdPDG", &fProdPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDist", &fDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThreshold", &fThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNRes", &fNRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsRes", &fIsRes);
      R__insp.InspectMember(fIsRes, "fIsRes.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDirection", &fDirection);
      R__insp.InspectMember(fDirection, "fDirection.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGDecay(void *p) {
      return  p ? new(p) ::TEGDecay : new ::TEGDecay;
   }
   static void *newArray_TEGDecay(Long_t nElements, void *p) {
      return p ? new(p) ::TEGDecay[nElements] : new ::TEGDecay[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGDecay(void *p) {
      delete ((::TEGDecay*)p);
   }
   static void deleteArray_TEGDecay(void *p) {
      delete [] ((::TEGDecay*)p);
   }
   static void destruct_TEGDecay(void *p) {
      typedef ::TEGDecay current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGDecay

//______________________________________________________________________________
void TEGDecTwoBody::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGDecTwoBody.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGDecTwoBody::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGDecTwoBody::Class(),this);
   }
}

//______________________________________________________________________________
void TEGDecTwoBody::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGDecTwoBody.
      TClass *R__cl = ::TEGDecTwoBody::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCosTheta", &fCosTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fW", &fW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsWCosTh", &fIsWCosTh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsE1Theta1", &fIsE1Theta1);
      TEGDecay::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGDecTwoBody(void *p) {
      return  p ? new(p) ::TEGDecTwoBody : new ::TEGDecTwoBody;
   }
   static void *newArray_TEGDecTwoBody(Long_t nElements, void *p) {
      return p ? new(p) ::TEGDecTwoBody[nElements] : new ::TEGDecTwoBody[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGDecTwoBody(void *p) {
      delete ((::TEGDecTwoBody*)p);
   }
   static void deleteArray_TEGDecTwoBody(void *p) {
      delete [] ((::TEGDecTwoBody*)p);
   }
   static void destruct_TEGDecTwoBody(void *p) {
      typedef ::TEGDecTwoBody current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGDecTwoBody

//______________________________________________________________________________
void TEGDecElElasticRad::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGDecElElasticRad.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGDecElElasticRad::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGDecElElasticRad::Class(),this);
   }
}

//______________________________________________________________________________
void TEGDecElElasticRad::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGDecElElasticRad.
      TClass *R__cl = ::TEGDecElElasticRad::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEe", &fEe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThe", &fThe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTarMass", &fTarMass);
      TEGDecay::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGDecElElasticRad(void *p) {
      return  p ? new(p) ::TEGDecElElasticRad : new ::TEGDecElElasticRad;
   }
   static void *newArray_TEGDecElElasticRad(Long_t nElements, void *p) {
      return p ? new(p) ::TEGDecElElasticRad[nElements] : new ::TEGDecElElasticRad[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGDecElElasticRad(void *p) {
      delete ((::TEGDecElElasticRad*)p);
   }
   static void deleteArray_TEGDecElElasticRad(void *p) {
      delete [] ((::TEGDecElElasticRad*)p);
   }
   static void destruct_TEGDecElElasticRad(void *p) {
      typedef ::TEGDecElElasticRad current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGDecElElasticRad

//______________________________________________________________________________
void TEGDistribution::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGDistribution.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGDistribution::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGDistribution::Class(),this);
   }
}

//______________________________________________________________________________
void TEGDistribution::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGDistribution.
      TClass *R__cl = ::TEGDistribution::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTheta", &fTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaMax", &fThetaMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThetaMin", &fThetaMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCosTh", &fCosTh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCosThMin", &fCosThMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCosThMax", &fCosThMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiMax", &fPhiMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhiMin", &fPhiMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE", &fE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEMax", &fEMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEMin", &fEMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fM", &fM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMMax", &fMMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMMin", &fMMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fThetaDist", &fThetaDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCosThDist", &fCosThDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPhiDist", &fPhiDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEDist", &fEDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMDist", &fMDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fP4", &fP4);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGDistribution(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGDistribution : new ::TEGDistribution;
   }
   static void *newArray_TEGDistribution(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGDistribution[nElements] : new ::TEGDistribution[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGDistribution(void *p) {
      delete ((::TEGDistribution*)p);
   }
   static void deleteArray_TEGDistribution(void *p) {
      delete [] ((::TEGDistribution*)p);
   }
   static void destruct_TEGDistribution(void *p) {
      typedef ::TEGDistribution current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGDistribution

//______________________________________________________________________________
void TEGDistDsigDOmega::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGDistDsigDOmega.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGDistDsigDOmega::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGDistDsigDOmega::Class(),this);
   }
}

//______________________________________________________________________________
void TEGDistDsigDOmega::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGDistDsigDOmega.
      TClass *R__cl = ::TEGDistDsigDOmega::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f2Dist", &f2Dist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fH2Dist", &fH2Dist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsM", &fIsM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsE", &fIsE);
      TEGDistribution::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGDistDsigDOmega(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGDistDsigDOmega : new ::TEGDistDsigDOmega;
   }
   static void *newArray_TEGDistDsigDOmega(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGDistDsigDOmega[nElements] : new ::TEGDistDsigDOmega[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGDistDsigDOmega(void *p) {
      delete ((::TEGDistDsigDOmega*)p);
   }
   static void deleteArray_TEGDistDsigDOmega(void *p) {
      delete [] ((::TEGDistDsigDOmega*)p);
   }
   static void destruct_TEGDistDsigDOmega(void *p) {
      typedef ::TEGDistDsigDOmega current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGDistDsigDOmega

//______________________________________________________________________________
void TEGDistDsigDt::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGDistDsigDt.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGDistDsigDt::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGDistDsigDt::Class(),this);
   }
}

//______________________________________________________________________________
void TEGDistDsigDt::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGDistDsigDt.
      TClass *R__cl = ::TEGDistDsigDt::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fReaction", &fReaction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRP4", &fRP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMP4", &fMP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGP4", &fGP4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ftDist", &ftDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ft", &ft);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftMin", &ftMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ftMax", &ftMax);
      TEGDistDsigDOmega::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGDistDsigDt(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGDistDsigDt : new ::TEGDistDsigDt;
   }
   static void *newArray_TEGDistDsigDt(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGDistDsigDt[nElements] : new ::TEGDistDsigDt[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGDistDsigDt(void *p) {
      delete ((::TEGDistDsigDt*)p);
   }
   static void deleteArray_TEGDistDsigDt(void *p) {
      delete [] ((::TEGDistDsigDt*)p);
   }
   static void destruct_TEGDistDsigDt(void *p) {
      typedef ::TEGDistDsigDt current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGDistDsigDt

//______________________________________________________________________________
void TEGDistEScat::Streamer(TBuffer &R__b)
{
   // Stream an object of class TEGDistEScat.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TEGDistEScat::Class(),this);
   } else {
      R__b.WriteClassBuffer(TEGDistEScat::Class(),this);
   }
}

//______________________________________________________________________________
void TEGDistEScat::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TEGDistEScat.
      TClass *R__cl = ::TEGDistEScat::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*f2Dist", &f2Dist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFlux", &fFlux);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGPol", &fGPol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMTar", &fMTar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fW", &fW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEscat", &fEscat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThscat", &fThscat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fomega", &fomega);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQ2", &fQ2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThg", &fThg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE0", &fE0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMe", &fMe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsWThe", &fIsWThe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsScatETh", &fIsScatETh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsElastic", &fIsElastic);
      TEGDistribution::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TEGDistEScat(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGDistEScat : new ::TEGDistEScat;
   }
   static void *newArray_TEGDistEScat(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TEGDistEScat[nElements] : new ::TEGDistEScat[nElements];
   }
   // Wrapper around operator delete
   static void delete_TEGDistEScat(void *p) {
      delete ((::TEGDistEScat*)p);
   }
   static void deleteArray_TEGDistEScat(void *p) {
      delete [] ((::TEGDistEScat*)p);
   }
   static void destruct_TEGDistEScat(void *p) {
      typedef ::TEGDistEScat current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TEGDistEScat

/********************************************************
* /home/dglazier/Work/clas12/EdGen/src//TEGGenDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableTEGGenDict();

extern "C" void G__set_cpp_environmentTEGGenDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGDecElElasticRad.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGDecTwoBody.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGDecay.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGDistDsigDOmega.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGDistDsigDt.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGDistEScat.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGDistribution.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGElectroReaction.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGGenerator.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGOutAll.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGOutGEMC.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGOutLorentz.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGOutput.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGParticle.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGPhotoReaction.h");
  G__add_compiledheader("/home/dglazier/Work/clas12/EdGen/src//TEGReaction.h");
  G__cpp_reset_tagtableTEGGenDict();
}
#include <new>
extern "C" int G__cpp_dllrevTEGGenDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TEGParticle */
static int G__TEGGenDict_236_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGParticle[n];
     } else {
       p = new((void*) gvp) TEGParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGParticle;
     } else {
       p = new((void*) gvp) TEGParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TEGParticle(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TEGParticle*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TEGParticle(
(const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TEGParticle*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TEGParticle((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TEGParticle((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((TEGParticle*) G__getstructoffset())->AddDecayChannel((TEGDecay*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((TEGParticle*) G__getstructoffset())->AddDecayChannel((TEGDecay*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->Initialise();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letdouble(result7, 100, (double) ((TEGParticle*) G__getstructoffset())->CalcDynamicMass((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letdouble(result7, 100, (double) ((TEGParticle*) G__getstructoffset())->CalcDynamicMass((Double_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 100, (double) ((TEGParticle*) G__getstructoffset())->CalcDynamicMass());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGParticle*) G__getstructoffset())->GetDynamicMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGParticle*) G__getstructoffset())->CalcMinMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->CalcDecVertex();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGParticle*) G__getstructoffset())->GetMinMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->ChooseDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEGParticle*) G__getstructoffset())->Decay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->FixCurrDecay((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEGParticle*) G__getstructoffset())->IsDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEGParticle*) G__getstructoffset())->IsTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->GetPDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->SetParent((TEGParticle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->GetParent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->GetP4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->GetPol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->GetVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->GetDecVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->GetCurrDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->GetDecay((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->GetMassDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->GetDecVertexDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TEGParticle*) G__getstructoffset())->SetIsDecay((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TEGParticle*) G__getstructoffset())->SetIsDecay();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TEGParticle*) G__getstructoffset())->SetIsTrack((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TEGParticle*) G__getstructoffset())->SetIsTrack();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->SetP4((TLorentzVector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->SetP4(*((TLorentzVector*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->SetPol((TVector3*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->SetVertex((TVector3*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->SetPDGcode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->SetForceDecay((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->SetDistribution((TEGDistribution*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->SetMassDist((TF1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->SetPDGDecays();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->GetDistribution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->GenerateInitialP4((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((TEGParticle*) G__getstructoffset())->GenerateInitialP4());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->AddToEvent((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_236_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEGGenDict_236_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEGParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEGParticle(*(TEGParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGParticle G__TTEGParticle;
static int G__TEGGenDict_236_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGParticle*) (soff+(sizeof(TEGParticle)*i)))->~G__TTEGParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGParticle*) (soff))->~G__TTEGParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_236_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGParticle* dest = (TEGParticle*) G__getstructoffset();
   *dest = *(TEGParticle*) libp->para[0].ref;
   const TEGParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGDistribution */
static int G__TEGGenDict_237_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDistribution* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDistribution[n];
     } else {
       p = new((void*) gvp) TEGDistribution[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDistribution;
     } else {
       p = new((void*) gvp) TEGDistribution;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->GenerateRandom();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->Initialise();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistribution*) G__getstructoffset())->GenerateTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistribution*) G__getstructoffset())->GeneratePhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistribution*) G__getstructoffset())->GenerateE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistribution*) G__getstructoffset())->GenerateM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetThetaDist((TF1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetCosThDist((TF1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetPhiDist((TF1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetEDist((TF1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetMDist((TF1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDistribution*) G__getstructoffset())->GetThetaDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDistribution*) G__getstructoffset())->GetCosThDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDistribution*) G__getstructoffset())->GetPhiDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDistribution*) G__getstructoffset())->GetEDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDistribution*) G__getstructoffset())->GetMDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEGDistribution*) G__getstructoffset())->InERange((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEGDistribution*) G__getstructoffset())->InThRange((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEGDistribution*) G__getstructoffset())->InPhiRange((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEGDistribution*) G__getstructoffset())->InMRange((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetThetaRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetCosThRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetPhiRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetERange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetMRange((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->GetThRange(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->GetCosThRange(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->GetPhiRange(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->GetERange(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->GetMRange(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistribution*) G__getstructoffset())->GetTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistribution*) G__getstructoffset())->GetCosTh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistribution*) G__getstructoffset())->GetPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistribution*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistribution*) G__getstructoffset())->GetM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetTheta((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetCosTh((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetE((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetM((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->SetPhi((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDistribution*) G__getstructoffset())->GetP4());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDistribution*) G__getstructoffset())->GenerateP4((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGDistribution::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDistribution::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGDistribution::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGDistribution::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TEGDistribution*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistribution*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDistribution::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDistribution::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDistribution::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_237_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDistribution::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEGGenDict_237_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEGDistribution* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEGDistribution(*(TEGDistribution*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGDistribution G__TTEGDistribution;
static int G__TEGGenDict_237_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGDistribution*) (soff+(sizeof(TEGDistribution)*i)))->~G__TTEGDistribution();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGDistribution*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGDistribution*) (soff))->~G__TTEGDistribution();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_237_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDistribution* dest = (TEGDistribution*) G__getstructoffset();
   *dest = *(TEGDistribution*) libp->para[0].ref;
   const TEGDistribution& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGDecay */
static int G__TEGGenDict_238_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDecay* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDecay[n];
     } else {
       p = new((void*) gvp) TEGDecay[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDecay;
     } else {
       p = new((void*) gvp) TEGDecay;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecay*) G__getstructoffset())->AddProducts((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((TEGDecay*) G__getstructoffset())->AddProduct((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) ((TEGDecay*) G__getstructoffset())->AddProduct((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecay*) G__getstructoffset())->Initialise();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecay*) G__getstructoffset())->FindDaughterMasses();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecay*) G__getstructoffset())->GenerateRandom();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEGDecay*) G__getstructoffset())->GenDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEGDecay*) G__getstructoffset())->GenPhaseSpace());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDecay*) G__getstructoffset())->Pdk((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecay*) G__getstructoffset())->BoostLab();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecay*) G__getstructoffset())->SetMother((TEGParticle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecay*) G__getstructoffset())->SetDistribution((TEGDistribution*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDecay*) G__getstructoffset())->GetDistribution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDecay*) G__getstructoffset())->GetProducts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDecay*) G__getstructoffset())->GetProduct((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDecay*) G__getstructoffset())->GetProductP4((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDecay*) G__getstructoffset())->GetProductByClass(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TEGDecay*) G__getstructoffset())->GetNProduct());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDecay*) G__getstructoffset())->GetThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGDecay::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDecay::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGDecay::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGDecay::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecay*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDecay::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDecay::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDecay::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_238_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDecay::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEGGenDict_238_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEGDecay* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEGDecay(*(TEGDecay*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGDecay G__TTEGDecay;
static int G__TEGGenDict_238_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGDecay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGDecay*) (soff+(sizeof(TEGDecay)*i)))->~G__TTEGDecay();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGDecay*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGDecay*) (soff))->~G__TTEGDecay();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_238_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDecay* dest = (TEGDecay*) G__getstructoffset();
   *dest = *(TEGDecay*) libp->para[0].ref;
   const TEGDecay& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGGenerator */
static int G__TEGGenDict_268_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGGenerator[n];
     } else {
       p = new((void*) gvp) TEGGenerator[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGGenerator;
     } else {
       p = new((void*) gvp) TEGGenerator;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGGenerator::Generator());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGGenerator*) G__getstructoffset())->SaveEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGGenerator*) G__getstructoffset())->GenerateEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TEGGenerator*) G__getstructoffset())->GetSeed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGGenerator*) G__getstructoffset())->GetPDGdb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGGenerator*) G__getstructoffset())->GetP4Target());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGGenerator*) G__getstructoffset())->GetP4Beam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGGenerator*) G__getstructoffset())->GetP4R());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGGenerator*) G__getstructoffset())->GetBeam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGGenerator*) G__getstructoffset())->GetTarget());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGGenerator*) G__getstructoffset())->GetReaction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGGenerator*) G__getstructoffset())->GetProducts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TEGGenerator*) G__getstructoffset())->GetNEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TEGGenerator*) G__getstructoffset())->GetNEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TEGGenerator*) G__getstructoffset())->GetNParticle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGGenerator*) G__getstructoffset())->AddParticleToEvent((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGGenerator*) G__getstructoffset())->SetOutput((TEGOutput*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGGenerator*) G__getstructoffset())->SetReaction((TEGParticle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGGenerator*) G__getstructoffset())->FillEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_268_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEGGenDict_268_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEGGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEGGenerator(*(TEGGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGGenerator G__TTEGGenerator;
static int G__TEGGenDict_268_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGGenerator*) (soff+(sizeof(TEGGenerator)*i)))->~G__TTEGGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGGenerator*) (soff))->~G__TTEGGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_268_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGGenerator* dest = (TEGGenerator*) G__getstructoffset();
   *dest = *(TEGGenerator*) libp->para[0].ref;
   const TEGGenerator& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGOutput */
static int G__TEGGenDict_269_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TEGOutput*) G__getstructoffset())->Init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TEGOutput*) G__getstructoffset())->SaveEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TEGOutput*) G__getstructoffset())->Close());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((TEGOutput*) G__getstructoffset())->GetFileName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGOutput*) G__getstructoffset())->SetFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGOutput*) G__getstructoffset())->SetGenerator((TEGGenerator*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGOutput::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGOutput::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGOutput::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGOutput::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TEGOutput*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGOutput*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGOutput*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGOutput*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGOutput::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGOutput::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGOutput::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_269_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGOutput::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGOutput G__TTEGOutput;
static int G__TEGGenDict_269_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGOutput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGOutput*) (soff+(sizeof(TEGOutput)*i)))->~G__TTEGOutput();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGOutput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGOutput*) (soff))->~G__TTEGOutput();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_269_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGOutput* dest = (TEGOutput*) G__getstructoffset();
   *dest = *(TEGOutput*) libp->para[0].ref;
   const TEGOutput& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGDistDsigDOmega */
static int G__TEGGenDict_295_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDistDsigDOmega* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDistDsigDOmega[n];
     } else {
       p = new((void*) gvp) TEGDistDsigDOmega[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDistDsigDOmega;
     } else {
       p = new((void*) gvp) TEGDistDsigDOmega;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDOmega));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistDsigDOmega*) G__getstructoffset())->GenerateRandomM();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistDsigDOmega*) G__getstructoffset())->GenerateRandomE();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistDsigDOmega*) G__getstructoffset())->EvalHist((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistDsigDOmega*) G__getstructoffset())->Set2Distribution((TF2*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistDsigDOmega*) G__getstructoffset())->Set2Distribution((TH2*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDistDsigDOmega*) G__getstructoffset())->Get2Distribution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TEGDistDsigDOmega*) G__getstructoffset())->SetIsM((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TEGDistDsigDOmega*) G__getstructoffset())->SetIsM();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TEGDistDsigDOmega*) G__getstructoffset())->SetIsE((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TEGDistDsigDOmega*) G__getstructoffset())->SetIsE();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGDistDsigDOmega::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDistDsigDOmega::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGDistDsigDOmega::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGDistDsigDOmega::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistDsigDOmega*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDistDsigDOmega::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDistDsigDOmega::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDistDsigDOmega::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_295_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDistDsigDOmega::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEGGenDict_295_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEGDistDsigDOmega* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEGDistDsigDOmega(*(TEGDistDsigDOmega*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDOmega));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGDistDsigDOmega G__TTEGDistDsigDOmega;
static int G__TEGGenDict_295_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGDistDsigDOmega*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGDistDsigDOmega*) (soff+(sizeof(TEGDistDsigDOmega)*i)))->~G__TTEGDistDsigDOmega();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGDistDsigDOmega*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGDistDsigDOmega*) (soff))->~G__TTEGDistDsigDOmega();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_295_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDistDsigDOmega* dest = (TEGDistDsigDOmega*) G__getstructoffset();
   *dest = *(TEGDistDsigDOmega*) libp->para[0].ref;
   const TEGDistDsigDOmega& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGDecElElasticRad */
static int G__TEGGenDict_296_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDecElElasticRad* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDecElElasticRad[n];
     } else {
       p = new((void*) gvp) TEGDecElElasticRad[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDecElElasticRad;
     } else {
       p = new((void*) gvp) TEGDecElElasticRad;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecElElasticRad));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_296_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDecElElasticRad*) G__getstructoffset())->AddProduct((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_296_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecElElasticRad*) G__getstructoffset())->SetDistParticle((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_296_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecElElasticRad*) G__getstructoffset())->SetTarMass((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_296_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGDecElElasticRad::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_296_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDecElElasticRad::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_296_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGDecElElasticRad::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_296_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGDecElElasticRad::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_296_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecElElasticRad*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_296_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDecElElasticRad::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_296_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDecElElasticRad::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_296_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDecElElasticRad::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_296_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDecElElasticRad::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEGGenDict_296_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEGDecElElasticRad* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEGDecElElasticRad(*(TEGDecElElasticRad*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecElElasticRad));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGDecElElasticRad G__TTEGDecElElasticRad;
static int G__TEGGenDict_296_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGDecElElasticRad*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGDecElElasticRad*) (soff+(sizeof(TEGDecElElasticRad)*i)))->~G__TTEGDecElElasticRad();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGDecElElasticRad*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGDecElElasticRad*) (soff))->~G__TTEGDecElElasticRad();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_296_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDecElElasticRad* dest = (TEGDecElElasticRad*) G__getstructoffset();
   *dest = *(TEGDecElElasticRad*) libp->para[0].ref;
   const TEGDecElElasticRad& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGDecTwoBody */
static int G__TEGGenDict_298_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDecTwoBody* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDecTwoBody[n];
     } else {
       p = new((void*) gvp) TEGDecTwoBody[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDecTwoBody;
     } else {
       p = new((void*) gvp) TEGDecTwoBody;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecTwoBody));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEGDecTwoBody*) G__getstructoffset())->GenWCosThDecay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TEGDecTwoBody*) G__getstructoffset())->GenE1Theta1Decay());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecTwoBody*) G__getstructoffset())->SetDistParticle((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecTwoBody*) G__getstructoffset())->SetIsWCosTh();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecTwoBody*) G__getstructoffset())->SetIsE1Theta1();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGDecTwoBody::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDecTwoBody::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGDecTwoBody::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGDecTwoBody::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDecTwoBody*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDecTwoBody::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDecTwoBody::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDecTwoBody::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_298_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDecTwoBody::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEGGenDict_298_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEGDecTwoBody* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEGDecTwoBody(*(TEGDecTwoBody*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecTwoBody));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGDecTwoBody G__TTEGDecTwoBody;
static int G__TEGGenDict_298_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGDecTwoBody*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGDecTwoBody*) (soff+(sizeof(TEGDecTwoBody)*i)))->~G__TTEGDecTwoBody();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGDecTwoBody*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGDecTwoBody*) (soff))->~G__TTEGDecTwoBody();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_298_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDecTwoBody* dest = (TEGDecTwoBody*) G__getstructoffset();
   *dest = *(TEGDecTwoBody*) libp->para[0].ref;
   const TEGDecTwoBody& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGReaction */
static int G__TEGGenDict_299_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGReaction*) G__getstructoffset())->GetReactionMass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGReaction*) G__getstructoffset())->GenerateReactionMass();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGReaction*) G__getstructoffset())->SetBeamSpotSize((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGReaction*) G__getstructoffset())->SetTargetLength((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGReaction*) G__getstructoffset())->SetTargetPos(*((TVector3*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGReaction*) G__getstructoffset())->CalcVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGReaction*) G__getstructoffset())->GetP4I1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGReaction*) G__getstructoffset())->GetP4I2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGReaction*) G__getstructoffset())->SetInitial1((TEGParticle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGReaction*) G__getstructoffset())->SetInitial2((TEGParticle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGReaction*) G__getstructoffset())->GetInitial1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGReaction*) G__getstructoffset())->GetInitial2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGReaction::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGReaction::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGReaction::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGReaction::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGReaction*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGReaction::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGReaction::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGReaction::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_299_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGReaction::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGReaction G__TTEGReaction;
static int G__TEGGenDict_299_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGReaction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGReaction*) (soff+(sizeof(TEGReaction)*i)))->~G__TTEGReaction();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGReaction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGReaction*) (soff))->~G__TTEGReaction();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_299_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGReaction* dest = (TEGReaction*) G__getstructoffset();
   *dest = *(TEGReaction*) libp->para[0].ref;
   const TEGReaction& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGDistDsigDt */
static int G__TEGGenDict_300_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDistDsigDt* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDistDsigDt(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) TEGDistDsigDt(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDistDsigDt((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) TEGDistDsigDt((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDistDsigDt((Double_t) G__double(libp->para[0]));
     } else {
       p = new((void*) gvp) TEGDistDsigDt((Double_t) G__double(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TEGDistDsigDt[n];
       } else {
         p = new((void*) gvp) TEGDistDsigDt[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TEGDistDsigDt;
       } else {
         p = new((void*) gvp) TEGDistDsigDt;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDt));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistDsigDt*) G__getstructoffset())->SetReaction((TEGReaction*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistDsigDt*) G__getstructoffset())->SettDist((TF1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDistDsigDt*) G__getstructoffset())->GettDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistDsigDt*) G__getstructoffset())->Gett());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistDsigDt*) G__getstructoffset())->GettMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistDsigDt*) G__getstructoffset())->SettMax((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistDsigDt*) G__getstructoffset())->GettMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistDsigDt*) G__getstructoffset())->SettMin((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGDistDsigDt::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDistDsigDt::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGDistDsigDt::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGDistDsigDt::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistDsigDt*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDistDsigDt::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDistDsigDt::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDistDsigDt::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_300_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDistDsigDt::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEGGenDict_300_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEGDistDsigDt* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEGDistDsigDt(*(TEGDistDsigDt*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDt));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGDistDsigDt G__TTEGDistDsigDt;
static int G__TEGGenDict_300_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGDistDsigDt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGDistDsigDt*) (soff+(sizeof(TEGDistDsigDt)*i)))->~G__TTEGDistDsigDt();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGDistDsigDt*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGDistDsigDt*) (soff))->~G__TTEGDistDsigDt();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_300_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDistDsigDt* dest = (TEGDistDsigDt*) G__getstructoffset();
   *dest = *(TEGDistDsigDt*) libp->para[0].ref;
   const TEGDistDsigDt& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGDistEScat */
static int G__TEGGenDict_301_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDistEScat* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDistEScat[n];
     } else {
       p = new((void*) gvp) TEGDistEScat[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGDistEScat;
     } else {
       p = new((void*) gvp) TEGDistEScat;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistEScat));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistEScat*) G__getstructoffset())->Set2Distribution((TF2*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGDistEScat*) G__getstructoffset())->Get2Distribution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistEScat*) G__getstructoffset())->SetE0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TEGDistEScat*) G__getstructoffset())->SetIsWThe((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TEGDistEScat*) G__getstructoffset())->SetIsWThe();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TEGDistEScat*) G__getstructoffset())->SetIsScatETh((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TEGDistEScat*) G__getstructoffset())->SetIsScatETh();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TEGDistEScat*) G__getstructoffset())->SetIsElastic((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TEGDistEScat*) G__getstructoffset())->SetIsElastic();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistEScat*) G__getstructoffset())->Flux_W_The((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistEScat*) G__getstructoffset())->Flux_ScatETh((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistEScat*) G__getstructoffset())->GPol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TEGDistEScat*) G__getstructoffset())->CalcKinematics());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGDistEScat::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDistEScat::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGDistEScat::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGDistEScat::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGDistEScat*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDistEScat::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDistEScat::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGDistEScat::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_301_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGDistEScat::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEGGenDict_301_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEGDistEScat* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEGDistEScat(*(TEGDistEScat*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistEScat));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGDistEScat G__TTEGDistEScat;
static int G__TEGGenDict_301_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGDistEScat*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGDistEScat*) (soff+(sizeof(TEGDistEScat)*i)))->~G__TTEGDistEScat();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGDistEScat*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGDistEScat*) (soff))->~G__TTEGDistEScat();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_301_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGDistEScat* dest = (TEGDistEScat*) G__getstructoffset();
   *dest = *(TEGDistEScat*) libp->para[0].ref;
   const TEGDistEScat& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGElectroReaction */
static int G__TEGGenDict_302_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGElectroReaction* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGElectroReaction[n];
     } else {
       p = new((void*) gvp) TEGElectroReaction[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGElectroReaction;
     } else {
       p = new((void*) gvp) TEGElectroReaction;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_302_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGElectroReaction* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TEGElectroReaction((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TEGElectroReaction((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_302_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TEGElectroReaction*) G__getstructoffset())->GetGammaStar());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_302_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGElectroReaction::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_302_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGElectroReaction::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_302_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGElectroReaction::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_302_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGElectroReaction::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_302_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGElectroReaction*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_302_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGElectroReaction::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_302_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGElectroReaction::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_302_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGElectroReaction::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_302_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGElectroReaction::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEGGenDict_302_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEGElectroReaction* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEGElectroReaction(*(TEGElectroReaction*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGElectroReaction G__TTEGElectroReaction;
static int G__TEGGenDict_302_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGElectroReaction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGElectroReaction*) (soff+(sizeof(TEGElectroReaction)*i)))->~G__TTEGElectroReaction();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGElectroReaction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGElectroReaction*) (soff))->~G__TTEGElectroReaction();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_302_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGElectroReaction* dest = (TEGElectroReaction*) G__getstructoffset();
   *dest = *(TEGElectroReaction*) libp->para[0].ref;
   const TEGElectroReaction& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGOutAll */
static int G__TEGGenDict_627_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGOutAll* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGOutAll[n];
     } else {
       p = new((void*) gvp) TEGOutAll[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGOutAll;
     } else {
       p = new((void*) gvp) TEGOutAll;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutAll));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_627_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TEGOutAll*) G__getstructoffset())->SetOnlyTrackFinal((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TEGOutAll*) G__getstructoffset())->SetOnlyTrackFinal();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_627_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGOutAll::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_627_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGOutAll::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_627_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGOutAll::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_627_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGOutAll::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_627_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGOutAll*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_627_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGOutAll::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_627_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGOutAll::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_627_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGOutAll::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_627_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGOutAll::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEGGenDict_627_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEGOutAll* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEGOutAll(*(TEGOutAll*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutAll));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGOutAll G__TTEGOutAll;
static int G__TEGGenDict_627_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGOutAll*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGOutAll*) (soff+(sizeof(TEGOutAll)*i)))->~G__TTEGOutAll();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGOutAll*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGOutAll*) (soff))->~G__TTEGOutAll();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_627_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGOutAll* dest = (TEGOutAll*) G__getstructoffset();
   *dest = *(TEGOutAll*) libp->para[0].ref;
   const TEGOutAll& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGOutGEMC */
static int G__TEGGenDict_628_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGOutGEMC* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGOutGEMC[n];
     } else {
       p = new((void*) gvp) TEGOutGEMC[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGOutGEMC;
     } else {
       p = new((void*) gvp) TEGOutGEMC;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutGEMC));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_628_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGOutGEMC::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_628_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGOutGEMC::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_628_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGOutGEMC::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_628_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGOutGEMC::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_628_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGOutGEMC*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_628_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGOutGEMC::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_628_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGOutGEMC::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_628_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGOutGEMC::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_628_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGOutGEMC::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGOutGEMC G__TTEGOutGEMC;
static int G__TEGGenDict_628_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGOutGEMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGOutGEMC*) (soff+(sizeof(TEGOutGEMC)*i)))->~G__TTEGOutGEMC();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGOutGEMC*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGOutGEMC*) (soff))->~G__TTEGOutGEMC();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGOutLorentz */
static int G__TEGGenDict_629_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGOutLorentz* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGOutLorentz[n];
     } else {
       p = new((void*) gvp) TEGOutLorentz[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGOutLorentz;
     } else {
       p = new((void*) gvp) TEGOutLorentz;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutLorentz));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_629_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGOutLorentz::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_629_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGOutLorentz::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_629_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGOutLorentz::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_629_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGOutLorentz::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_629_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGOutLorentz*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_629_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGOutLorentz::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_629_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGOutLorentz::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_629_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGOutLorentz::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_629_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGOutLorentz::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEGGenDict_629_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEGOutLorentz* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEGOutLorentz(*(TEGOutLorentz*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutLorentz));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGOutLorentz G__TTEGOutLorentz;
static int G__TEGGenDict_629_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGOutLorentz*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGOutLorentz*) (soff+(sizeof(TEGOutLorentz)*i)))->~G__TTEGOutLorentz();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGOutLorentz*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGOutLorentz*) (soff))->~G__TTEGOutLorentz();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_629_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGOutLorentz* dest = (TEGOutLorentz*) G__getstructoffset();
   *dest = *(TEGOutLorentz*) libp->para[0].ref;
   const TEGOutLorentz& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TEGPhotoReaction */
static int G__TEGGenDict_630_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGPhotoReaction* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGPhotoReaction[n];
     } else {
       p = new((void*) gvp) TEGPhotoReaction[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TEGPhotoReaction;
     } else {
       p = new((void*) gvp) TEGPhotoReaction;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_630_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGPhotoReaction* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TEGPhotoReaction((const Char_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TEGPhotoReaction((const Char_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_630_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGPhotoReaction*) G__getstructoffset())->SetWLimits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_630_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TEGPhotoReaction::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_630_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGPhotoReaction::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_630_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TEGPhotoReaction::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_630_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TEGPhotoReaction::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_630_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TEGPhotoReaction*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_630_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGPhotoReaction::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_630_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGPhotoReaction::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_630_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TEGPhotoReaction::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__TEGGenDict_630_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TEGPhotoReaction::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__TEGGenDict_630_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TEGPhotoReaction* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TEGPhotoReaction(*(TEGPhotoReaction*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TEGPhotoReaction G__TTEGPhotoReaction;
static int G__TEGGenDict_630_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TEGPhotoReaction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TEGPhotoReaction*) (soff+(sizeof(TEGPhotoReaction)*i)))->~G__TTEGPhotoReaction();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TEGPhotoReaction*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TEGPhotoReaction*) (soff))->~G__TTEGPhotoReaction();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__TEGGenDict_630_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TEGPhotoReaction* dest = (TEGPhotoReaction*) G__getstructoffset();
   *dest = *(TEGPhotoReaction*) libp->para[0].ref;
   const TEGPhotoReaction& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TEGParticle */

/* TEGDistribution */

/* TEGDecay */

/* TEGGenerator */

/* TEGOutput */

/* TEGDistDsigDOmega */

/* TEGDecElElasticRad */

/* TEGDecTwoBody */

/* TEGReaction */

/* TEGDistDsigDt */

/* TEGDistEScat */

/* TEGElectroReaction */

/* TEGOutAll */

/* TEGOutGEMC */

/* TEGOutLorentz */

/* TEGPhotoReaction */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncTEGGenDict {
 public:
  G__Sizep2memfuncTEGGenDict(): p(&G__Sizep2memfuncTEGGenDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncTEGGenDict::*p)();
};

size_t G__get_sizep2memfuncTEGGenDict()
{
  G__Sizep2memfuncTEGGenDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceTEGGenDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle))) {
     TEGParticle *G__Lderived;
     G__Lderived=(TEGParticle*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle),G__get_linked_tagnum(&G__TEGGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle),G__get_linked_tagnum(&G__TEGGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay))) {
     TEGDecay *G__Lderived;
     G__Lderived=(TEGDecay*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay),G__get_linked_tagnum(&G__TEGGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay),G__get_linked_tagnum(&G__TEGGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGGenerator))) {
     TEGGenerator *G__Lderived;
     G__Lderived=(TEGGenerator*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGGenerator),G__get_linked_tagnum(&G__TEGGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDOmega))) {
     TEGDistDsigDOmega *G__Lderived;
     G__Lderived=(TEGDistDsigDOmega*)0x1000;
     {
       TEGDistribution *G__Lpbase=(TEGDistribution*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDOmega),G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecElElasticRad))) {
     TEGDecElElasticRad *G__Lderived;
     G__Lderived=(TEGDecElElasticRad*)0x1000;
     {
       TEGDecay *G__Lpbase=(TEGDecay*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecElElasticRad),G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecElElasticRad),G__get_linked_tagnum(&G__TEGGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecElElasticRad),G__get_linked_tagnum(&G__TEGGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecTwoBody))) {
     TEGDecTwoBody *G__Lderived;
     G__Lderived=(TEGDecTwoBody*)0x1000;
     {
       TEGDecay *G__Lpbase=(TEGDecay*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecTwoBody),G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecTwoBody),G__get_linked_tagnum(&G__TEGGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecTwoBody),G__get_linked_tagnum(&G__TEGGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGReaction))) {
     TEGReaction *G__Lderived;
     G__Lderived=(TEGReaction*)0x1000;
     {
       TEGParticle *G__Lpbase=(TEGParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGReaction),G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGReaction),G__get_linked_tagnum(&G__TEGGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGReaction),G__get_linked_tagnum(&G__TEGGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDt))) {
     TEGDistDsigDt *G__Lderived;
     G__Lderived=(TEGDistDsigDt*)0x1000;
     {
       TEGDistDsigDOmega *G__Lpbase=(TEGDistDsigDOmega*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDt),G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDOmega),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEGDistribution *G__Lpbase=(TEGDistribution*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDt),G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistEScat))) {
     TEGDistEScat *G__Lderived;
     G__Lderived=(TEGDistEScat*)0x1000;
     {
       TEGDistribution *G__Lpbase=(TEGDistribution*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistEScat),G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction))) {
     TEGElectroReaction *G__Lderived;
     G__Lderived=(TEGElectroReaction*)0x1000;
     {
       TEGReaction *G__Lpbase=(TEGReaction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction),G__get_linked_tagnum(&G__TEGGenDictLN_TEGReaction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEGParticle *G__Lpbase=(TEGParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction),G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction),G__get_linked_tagnum(&G__TEGGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction),G__get_linked_tagnum(&G__TEGGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutAll))) {
     TEGOutAll *G__Lderived;
     G__Lderived=(TEGOutAll*)0x1000;
     {
       TEGOutput *G__Lpbase=(TEGOutput*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutAll),G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutput),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutGEMC))) {
     TEGOutGEMC *G__Lderived;
     G__Lderived=(TEGOutGEMC*)0x1000;
     {
       TEGOutput *G__Lpbase=(TEGOutput*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutGEMC),G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutput),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutLorentz))) {
     TEGOutLorentz *G__Lderived;
     G__Lderived=(TEGOutLorentz*)0x1000;
     {
       TEGOutput *G__Lpbase=(TEGOutput*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutLorentz),G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutput),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction))) {
     TEGPhotoReaction *G__Lderived;
     G__Lderived=(TEGPhotoReaction*)0x1000;
     {
       TEGReaction *G__Lpbase=(TEGReaction*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction),G__get_linked_tagnum(&G__TEGGenDictLN_TEGReaction),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEGParticle *G__Lpbase=(TEGParticle*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction),G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction),G__get_linked_tagnum(&G__TEGGenDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction),G__get_linked_tagnum(&G__TEGGenDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableTEGGenDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__TEGGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEGGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEGGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEGGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEGGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__TEGGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__TEGGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEGGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__TEGGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__TEGGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__TEGGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__TEGGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__TEGGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__TEGGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__TEGGenDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__TEGGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__TEGGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__TEGGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TEGParticle */
static void G__setup_memvarTEGParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle));
   { TEGParticle *p; p=(TEGParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TParticlePDG),-1,-1,2,"fPDG=",0,"PDG particle properties");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fPDGcode=",0,"PDG code");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fLifetime=",0,"TPDG does not handle this very well!!!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle),-1,-1,2,"fParent=",0,"parent particle (if decay product)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector),-1,-1,2,"fP4=",0,"4 momentum in Lab frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TVector3),-1,-1,2,"fPol=",0,"Polarisation vector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TVector3),-1,-1,2,"fVertex=",0,"Production vertex");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TVector3),-1,-1,2,"fDecVertex=",0,"Decay vertex");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TObjArray),-1,-1,2,"fDecayParts=",0,"list of decay products for current event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TObjArray),-1,-1,2,"fDecays=",0,"list of decays");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNdecays=",0,"number of possible decay channels");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsDecay=",0,"Does this particle decay?");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsTrack=",0,"Should this particle be tracked?");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fForceDecay=",0,"Force this decay number only");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay),-1,-1,2,"fCurrDecay=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TArrayD),-1,-1,2,"fBranchRatio=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution),-1,-1,2,"fDist=",0,"possible initial distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TF1),-1,-1,2,"fMassDist=",0,"mass distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TF1),-1,-1,2,"fDecVertexTime=",0,"decay vertex distrbution");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPDGMass=",0,"mass from PDG");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fDynamicMass=",0,"mass calculated for this event");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinMass=",0,"min mass calculated allowed by decay products");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMinThresh=",0,"min decay threshold");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMaxThresh=",0,"max decay threshold");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGDistribution */
static void G__setup_memvarTEGDistribution(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution));
   { TEGDistribution *p; p=(TEGDistribution*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTheta=",0,"return an angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThetaMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCosTh=",0,"return an angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCosThMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCosThMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi=",0,"return an azimuthal angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhiMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fE=",0,"return an energy (or p)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fM=",0,"return a mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TF1),-1,-1,2,"fThetaDist=",0,"1D(uncorrelated) theta dist");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TF1),-1,-1,2,"fCosThDist=",0,"1D(uncorrelated) cos(theta) dist");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TF1),-1,-1,2,"fPhiDist=",0,"1D(uncorrelated) phi dist");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TF1),-1,-1,2,"fEDist=",0,"1D(uncorrelated) E dist");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TF1),-1,-1,2,"fMDist=",0,"1D(uncorrelated) M dist");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector),-1,-1,2,"fP4=",0,"possible random 4 vector");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGDecay */
static void G__setup_memvarTEGDecay(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay));
   { TEGDecay *p; p=(TEGDecay*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle),-1,-1,2,"fMother=",0,"The particle being decayed");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector),-1,-1,2,"fP4=",0,"4 momentum of decay particle(lab)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TObjArray),-1,-1,2,"fProducts=",0,"TEGParticle Array of decay products");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector),-1,-1,2,"fP4d=",0,"4 momenta of decay product particles");
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMd=",0,"decay product particle masses");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNd=",0,"number of decay products");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTcm=",0,"kinetic energy in CM");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWt=",0,"weight for particular event");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fWtMax=",0,"maximum weight");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,2,"fProdPDG=",0,"array of decay product pdg codes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution),-1,-1,2,"fDist=",0,"distribution for random nummbers");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThreshold=",0,"threshold mass=sum of product masses");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNRes=",0,"# decay products resonances");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TArrayI),-1,-1,2,"fIsRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TVector3),-1,-1,2,"fDirection=",0,"unit vector in mother momentum");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGGenerator */
static void G__setup_memvarTEGGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGGenerator));
   { TEGGenerator *p; p=(TEGGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSeed=",0,"initial random seed");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNrun=",0,"# of runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TDatabasePDG),-1,-1,2,"fdbPDG=",0,"PDG data base");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector),-1,-1,2,"fP4Target=",0,"target 4-momentum (usually at rest");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector),-1,-1,2,"fP4Beam=",0,"4-momentum of beam");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector),-1,-1,2,"fP4R=",0,"4-momentum beam + target particle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle),-1,-1,2,"fBeam=",0,"beam particle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle),-1,-1,2,"fTarget=",0,"quasi-free \"particle\" in target");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle),-1,-1,2,"fReaction=",0,"reaction \"particle\"");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TObjArray),-1,-1,2,"fParticles=",0,"Array of particles for saving");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TObjArray),-1,-1,2,"fProducts=",0,"Array of particles for saving");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutput),-1,-1,2,"fOutput=",0,"class to manage persistant output");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNEvents=",0,"total # of events to be thrown");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNEventi=",0,"event # counter");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNParticle=",0,"# particles in final state");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGGenerator),-1,-2,2,"fgInstance=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGOutput */
static void G__setup_memvarTEGOutput(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutput));
   { TEGOutput *p; p=(TEGOutput*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TString),-1,-1,2,"fFileName=",0,"Name of output file for saved events");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGGenerator),-1,-1,2,"fGenerator=",0,"Used to get data for writing");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGDistDsigDOmega */
static void G__setup_memvarTEGDistDsigDOmega(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDOmega));
   { TEGDistDsigDOmega *p; p=(TEGDistDsigDOmega*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TF2),-1,-1,2,"f2Dist=",0,"2D distribution function");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TH2),-1,-1,2,"fH2Dist=",0,"2D distribution histogram");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsM=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGDecElElasticRad */
static void G__setup_memvarTEGDecElElasticRad(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecElElasticRad));
   { TEGDecElElasticRad *p; p=(TEGDecElElasticRad*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEe=",0,"Energy of scattered electron");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThe=",0,"Energy of scattered electron");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTarMass=",0,"Mass of target");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGDecTwoBody */
static void G__setup_memvarTEGDecTwoBody(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecTwoBody));
   { TEGDecTwoBody *p; p=(TEGDecTwoBody*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fCosTheta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fW=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsWCosTh=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsE1Theta1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGReaction */
static void G__setup_memvarTEGReaction(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGReaction));
   { TEGReaction *p; p=(TEGReaction*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle),-1,-1,2,"fInitial1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle),-1,-1,2,"fInitial2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector),-1,-1,2,"fP4I1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector),-1,-1,2,"fP4I2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fW=",0,"invariant mass of the reaction");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fBeamSpotSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTargetLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TVector3),-1,-1,2,"fTargetPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGDistDsigDt */
static void G__setup_memvarTEGDistDsigDt(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDt));
   { TEGDistDsigDt *p; p=(TEGDistDsigDt*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGReaction),-1,-1,2,"fReaction=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector),-1,-1,2,"fRP4=",0,"reaction 4 vector ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector),-1,-1,2,"fMP4=",0,"meson 4 vector ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector),-1,-1,2,"fGP4=",0,"beam 4 vector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TF1),-1,-1,2,"ftDist=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"ft=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"ftMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"ftMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGDistEScat */
static void G__setup_memvarTEGDistEScat(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistEScat));
   { TEGDistEScat *p; p=(TEGDistEScat*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TF2),-1,-1,2,"f2Dist=",0,"2D distribution function");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fFlux=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fGPol=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMTar=",0,"target mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fW=",0,"invariant mass");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fEscat=",0,"scattered electron energy");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThscat=",0,"scattered electron angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fomega=",0,"virtual photon energy");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fQ2=",0,"negative mass of virtual photon");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fThg=",0,"virtual photon angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fE0=",0,"e- beam energy");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fMe=",0,"electron mass");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsWThe=",0,"use invariant mass W, and Thscat'");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsScatETh=",0,"use Escat and Thscat");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsElastic=",0,"use Elastic scattering decay");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGElectroReaction */
static void G__setup_memvarTEGElectroReaction(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction));
   { TEGElectroReaction *p; p=(TEGElectroReaction*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle),-1,-1,2,"fGammaStar=",0,"the virtual photon 4 vector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGOutAll */
static void G__setup_memvarTEGOutAll(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutAll));
   { TEGOutAll *p; p=(TEGOutAll*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TFile),-1,-1,4,"fOutFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TTree),-1,-1,4,"fOutTree=",0,"root output tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClonesArray),-1,-1,4,"fP4s=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClonesArray),-1,-1,4,"fVertices=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPDGs[100]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNp=",0,"number of particles in event");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fOnlyTrackFinal=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction),-1,-1,4,"fReaction=",0,"required for event header info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGOutGEMC */
static void G__setup_memvarTEGOutGEMC(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutGEMC));
   { TEGOutGEMC *p; p=(TEGOutGEMC*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fOutFile)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ofstream"),-1,1,"fOutFile=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fReaction)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction),-1,-1,1,"fReaction=",0,"required for event header info");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGOutLorentz */
static void G__setup_memvarTEGOutLorentz(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutLorentz));
   { TEGOutLorentz *p; p=(TEGOutLorentz*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fOutTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TTree),-1,-1,1,"fOutTree=",0,"root output tree");
   G__memvar_setup((void*)((long)(&p->fOutFile)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TFile),-1,-1,1,"fOutFile=",0,"root output file");
   G__memvar_setup((void*)((long)(&p->fNVect)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNVect=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fp4)-(long)(p)),85,2,0,G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector),-1,-1,1,"fp4=",0,"vector for branches ");
   G__memvar_setup((void*)((long)(&p->fver)-(long)(p)),85,2,0,G__get_linked_tagnum(&G__TEGGenDictLN_TVector3),-1,-1,1,"fver=",0,"vector for vertex branches ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TEGPhotoReaction */
static void G__setup_memvarTEGPhotoReaction(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction));
   { TEGPhotoReaction *p; p=(TEGPhotoReaction*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarTEGGenDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTEGParticle(void) {
   /* TEGParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle));
   G__memfunc_setup("TEGParticle",1044,G__TEGGenDict_236_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 0, 1, 1, 0, "", "its name and its parent", (void*) NULL, 0);
   G__memfunc_setup("TEGParticle",1044,G__TEGGenDict_236_0_2, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - name i - 'Int_t' 0 - pdg "
"U 'TEGParticle' - 0 - parent", "its name, its pdg code and its parent", (void*) NULL, 0);
   G__memfunc_setup("TEGParticle",1044,G__TEGGenDict_236_0_3, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDecayChannel",1448,G__TEGGenDict_236_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TEGDecay' - 0 - decay d - 'Double_t' 0 '1' bratio", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialise",1035,G__TEGGenDict_236_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcDynamicMass",1484,G__TEGGenDict_236_0_6, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 '0' Mmin d - 'Double_t' 0 '0' Mmax", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDynamicMass",1401,G__TEGGenDict_236_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcMinMass",1067,G__TEGGenDict_236_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CalcDecVertex",1277,G__TEGGenDict_236_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMinMass",984,G__TEGGenDict_236_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ChooseDecay",1095,G__TEGGenDict_236_0_11, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decay",486,G__TEGGenDict_236_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FixCurrDecay",1193,G__TEGGenDict_236_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsDecay",674,G__TEGGenDict_236_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTrack",689,G__TEGGenDict_236_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDG",507,G__TEGGenDict_236_0_16, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TParticlePDG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParent",918,G__TEGGenDict_236_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEGParticle' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParent",906,G__TEGGenDict_236_0_18, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4",420,G__TEGGenDict_236_0_19, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPol",587,G__TEGGenDict_236_0_20, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertex",926,G__TEGGenDict_236_0_21, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecVertex",1194,G__TEGGenDict_236_0_22, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCurrDecay",1186,G__TEGGenDict_236_0_23, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecay",774,G__TEGGenDict_236_0_24, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMassDist",1096,G__TEGGenDict_236_0_25, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDecVertexDist",1598,G__TEGGenDict_236_0_26, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsDecay",974,G__TEGGenDict_236_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsTrack",989,G__TEGGenDict_236_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP4",432,G__TEGGenDict_236_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TLorentzVector' - 0 - p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetP4",432,G__TEGGenDict_236_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TLorentzVector' - 0 - p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPol",599,G__TEGGenDict_236_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVector3' - 0 - pol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertex",938,G__TEGGenDict_236_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TVector3' - 0 - ver", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDGcode",930,G__TEGGenDict_236_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetForceDecay",1281,G__TEGGenDict_236_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - fd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDistribution",1580,G__TEGGenDict_236_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEGDistribution' - 0 - dist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMassDist",1108,G__TEGGenDict_236_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF1' - 0 - md", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDGDecays",1120,G__TEGGenDict_236_0_37, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDistribution",1568,G__TEGGenDict_236_0_38, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateInitialP4",1657,G__TEGGenDict_236_0_39, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddToEvent",974,G__TEGGenDict_236_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - -", "Add to list to be saved", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__TEGGenDict_236_0_41, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_236_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_236_0_43, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_236_0_44, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_236_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_236_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_236_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_236_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_236_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEGParticle", 1044, G__TEGGenDict_236_0_53, (int) ('i'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 1, 1, 1, 0, "u 'TEGParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEGParticle", 1170, G__TEGGenDict_236_0_54, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_236_0_55, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 1, 1, 1, 1, 0, "u 'TEGParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGDistribution(void) {
   /* TEGDistribution */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution));
   G__memfunc_setup("TEGDistribution",1504,G__TEGGenDict_237_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateRandom",1420,G__TEGGenDict_237_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialise",1035,G__TEGGenDict_237_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenerateTheta",1313,G__TEGGenDict_237_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GeneratePhi",1100,G__TEGGenDict_237_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenerateE",880,G__TEGGenDict_237_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenerateM",888,G__TEGGenDict_237_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetThetaDist",1206,G__TEGGenDict_237_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF1' - 0 - dist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCosThDist",1185,G__TEGGenDict_237_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF1' - 0 - dist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiDist",993,G__TEGGenDict_237_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF1' - 0 - dist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEDist",773,G__TEGGenDict_237_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF1' - 0 - dist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMDist",781,G__TEGGenDict_237_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF1' - 0 - dist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThetaDist",1194,G__TEGGenDict_237_0_13, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosThDist",1173,G__TEGGenDict_237_0_14, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiDist",981,G__TEGGenDict_237_0_15, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEDist",761,G__TEGGenDict_237_0_16, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMDist",769,G__TEGGenDict_237_0_17, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InERange",745,G__TEGGenDict_237_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InThRange",864,G__TEGGenDict_237_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InPhiRange",965,G__TEGGenDict_237_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InMRange",753,G__TEGGenDict_237_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetThetaRange",1295,G__TEGGenDict_237_0_22, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCosThRange",1274,G__TEGGenDict_237_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhiRange",1082,G__TEGGenDict_237_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetERange",862,G__TEGGenDict_237_0_25, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMRange",870,G__TEGGenDict_237_0_26, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThRange",969,G__TEGGenDict_237_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - min d - 'Double_t' 1 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCosThRange",1262,G__TEGGenDict_237_0_28, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - min d - 'Double_t' 1 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhiRange",1070,G__TEGGenDict_237_0_29, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - min d - 'Double_t' 1 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetERange",850,G__TEGGenDict_237_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - min d - 'Double_t' 1 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMRange",858,G__TEGGenDict_237_0_31, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - min d - 'Double_t' 1 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTheta",790,G__TEGGenDict_237_0_32, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCosTh",769,G__TEGGenDict_237_0_33, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetPhi",577,G__TEGGenDict_237_0_34, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetE",357,G__TEGGenDict_237_0_35, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetM",365,G__TEGGenDict_237_0_36, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetTheta",802,G__TEGGenDict_237_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCosTh",781,G__TEGGenDict_237_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetE",369,G__TEGGenDict_237_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetM",377,G__TEGGenDict_237_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhi",589,G__TEGGenDict_237_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4",420,G__TEGGenDict_237_0_42, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", "return preexisting p4", (void*) NULL, 0);
   G__memfunc_setup("GenerateP4",943,G__TEGGenDict_237_0_43, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - M", "return random 4 vector from this distribution using this Mass M", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEGGenDict_237_0_44, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGDistribution::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_237_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDistribution::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_237_0_46, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGDistribution::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_237_0_47, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGDistribution::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__TEGGenDict_237_0_48, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__TEGGenDict_237_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__TEGGenDict_237_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_237_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_237_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDistribution::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_237_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDistribution::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_237_0_54, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDistribution::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_237_0_55, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDistribution::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEGDistribution", 1504, G__TEGGenDict_237_0_56, (int) ('i'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution), -1, 0, 1, 1, 1, 0, "u 'TEGDistribution' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEGDistribution", 1630, G__TEGGenDict_237_0_57, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_237_0_58, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution), -1, 1, 1, 1, 1, 0, "u 'TEGDistribution' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGDecay(void) {
   /* TEGDecay */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay));
   G__memfunc_setup("TEGDecay",710,G__TEGGenDict_238_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddProducts",1117,G__TEGGenDict_238_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - prod", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddProduct",1002,G__TEGGenDict_238_0_3, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - pdg u 'TString' - 0 '\"\"' name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialise",1035,G__TEGGenDict_238_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindDaughterMasses",1825,G__TEGGenDict_238_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenerateRandom",1420,G__TEGGenDict_238_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenDecay",768,G__TEGGenDict_238_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenPhaseSpace",1271,G__TEGGenDict_238_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "default phase space defined here", (void*) NULL, 1);
   G__memfunc_setup("Pdk",287,G__TEGGenDict_238_0_9, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - a d - 'Double_t' 0 - b "
"d - 'Double_t' 0 - c", "utility for GenPhaseSpace", (void*) NULL, 0);
   G__memfunc_setup("BoostLab",790,G__TEGGenDict_238_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetMother",923,G__TEGGenDict_238_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEGParticle' - 0 - moth", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDistribution",1580,G__TEGGenDict_238_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEGDistribution' - 0 - dist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDistribution",1568,G__TEGGenDict_238_0_13, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistribution), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProducts",1140,G__TEGGenDict_238_0_14, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProduct",1025,G__TEGGenDict_238_0_15, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProductP4",1157,G__TEGGenDict_238_0_16, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProductByClass",1714,G__TEGGenDict_238_0_17, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNProduct",1103,G__TEGGenDict_238_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetThreshold",1229,G__TEGGenDict_238_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEGGenDict_238_0_20, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGDecay::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_238_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDecay::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_238_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGDecay::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_238_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGDecay::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_238_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_238_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDecay::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_238_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDecay::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_238_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDecay::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_238_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDecay::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEGDecay", 710, G__TEGGenDict_238_0_32, (int) ('i'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay), -1, 0, 1, 1, 1, 0, "u 'TEGDecay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEGDecay", 836, G__TEGGenDict_238_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_238_0_34, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecay), -1, 1, 1, 1, 1, 0, "u 'TEGDecay' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGGenerator(void) {
   /* TEGGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGGenerator));
   G__memfunc_setup("TEGGenerator",1159,G__TEGGenDict_268_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGGenerator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Generator",935,G__TEGGenDict_268_0_2, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGGenerator), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TEGGenerator* (*)())(&TEGGenerator::Generator) ), 0);
   G__memfunc_setup("SaveEvent",913,G__TEGGenDict_268_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", "write event to TTree", (void*) NULL, 1);
   G__memfunc_setup("GenerateEvent",1325,G__TEGGenDict_268_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", "generate single event", (void*) NULL, 1);
   G__memfunc_setup("GetSeed",673,G__TEGGenDict_268_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDGdb",705,G__TEGGenDict_268_0_6, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TDatabasePDG), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4Target",1035,G__TEGGenDict_268_0_7, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4Beam",793,G__TEGGenDict_268_0_8, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4R",502,G__TEGGenDict_268_0_9, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeam",661,G__TEGGenDict_268_0_10, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTarget",903,G__TEGGenDict_268_0_11, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReaction",1109,G__TEGGenDict_268_0_12, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProducts",1140,G__TEGGenDict_268_0_13, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEvents",995,G__TEGGenDict_268_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEvent",880,G__TEGGenDict_268_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNParticle",1186,G__TEGGenDict_268_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddParticleToEvent",1794,G__TEGGenDict_268_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetOutput",957,G__TEGGenDict_268_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEGOutput' - 0 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReaction",1121,G__TEGGenDict_268_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEGParticle' - 0 - rp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillEvent",905,G__TEGGenDict_268_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEGGenDict_268_0_21, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_268_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_268_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_268_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_268_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_268_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_268_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_268_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_268_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGGenerator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEGGenerator", 1159, G__TEGGenDict_268_0_33, (int) ('i'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGGenerator), -1, 0, 1, 1, 1, 0, "u 'TEGGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEGGenerator", 1285, G__TEGGenDict_268_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_268_0_35, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGGenerator), -1, 1, 1, 1, 1, 0, "u 'TEGGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGOutput(void) {
   /* TEGOutput */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutput));
   G__memfunc_setup("Init",404,G__TEGGenDict_269_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "intialisation, create file, ouput object etc", (void*) NULL, 3);
   G__memfunc_setup("SaveEvent",913,G__TEGGenDict_269_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "write event data", (void*) NULL, 3);
   G__memfunc_setup("Close",502,G__TEGGenDict_269_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "close output", (void*) NULL, 3);
   G__memfunc_setup("GetFileName",1057,G__TEGGenDict_269_0_5, 117, G__get_linked_tagnum(&G__TEGGenDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFileName",1069,G__TEGGenDict_269_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGenerator",1235,G__TEGGenDict_269_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEGGenerator' - 0 - gen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEGGenDict_269_0_8, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGOutput::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_269_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGOutput::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_269_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGOutput::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_269_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGOutput::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__TEGGenDict_269_0_12, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__TEGGenDict_269_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__TEGGenDict_269_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_269_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_269_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGOutput::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_269_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGOutput::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_269_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGOutput::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_269_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGOutput::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TEGOutput", 1007, G__TEGGenDict_269_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_269_0_21, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutput), -1, 1, 1, 1, 1, 0, "u 'TEGOutput' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGDistDsigDOmega(void) {
   /* TEGDistDsigDOmega */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDOmega));
   G__memfunc_setup("TEGDistDsigDOmega",1576,G__TEGGenDict_295_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDOmega), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateRandom",1420,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenerateRandomM",1497,G__TEGGenDict_295_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenerateRandomE",1489,G__TEGGenDict_295_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("EvalHist",800,G__TEGGenDict_295_0_5, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Set2Distribution",1630,G__TEGGenDict_295_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF2' - 0 - f2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Set2Distribution",1630,G__TEGGenDict_295_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH2' - 0 - f2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Get2Distribution",1618,G__TEGGenDict_295_0_8, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TF2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialise",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetIsM",565,G__TEGGenDict_295_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsE",557,G__TEGGenDict_295_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEGGenDict_295_0_12, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGDistDsigDOmega::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_295_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDistDsigDOmega::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_295_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGDistDsigDOmega::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_295_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGDistDsigDOmega::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_295_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_295_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDistDsigDOmega::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_295_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDistDsigDOmega::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_295_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDistDsigDOmega::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_295_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDistDsigDOmega::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEGDistDsigDOmega", 1576, G__TEGGenDict_295_0_24, (int) ('i'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDOmega), -1, 0, 1, 1, 1, 0, "u 'TEGDistDsigDOmega' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEGDistDsigDOmega", 1702, G__TEGGenDict_295_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_295_0_26, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDOmega), -1, 1, 1, 1, 1, 0, "u 'TEGDistDsigDOmega' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGDecElElasticRad(void) {
   /* TEGDecElElasticRad */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecElElasticRad));
   G__memfunc_setup("TEGDecElElasticRad",1657,G__TEGGenDict_296_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecElElasticRad), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenDecay",768,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddProduct",1002,G__TEGGenDict_296_0_3, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pdg", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialise",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetDistParticle",1524,G__TEGGenDict_296_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - dp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTarMass",999,G__TEGGenDict_296_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEGGenDict_296_0_7, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGDecElElasticRad::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_296_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDecElElasticRad::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_296_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGDecElElasticRad::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_296_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGDecElElasticRad::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_296_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_296_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDecElElasticRad::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_296_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDecElElasticRad::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_296_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDecElElasticRad::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_296_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDecElElasticRad::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEGDecElElasticRad", 1657, G__TEGGenDict_296_0_19, (int) ('i'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecElElasticRad), -1, 0, 1, 1, 1, 0, "u 'TEGDecElElasticRad' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEGDecElElasticRad", 1783, G__TEGGenDict_296_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_296_0_21, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecElElasticRad), -1, 1, 1, 1, 1, 0, "u 'TEGDecElElasticRad' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGDecTwoBody(void) {
   /* TEGDecTwoBody */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecTwoBody));
   G__memfunc_setup("TEGDecTwoBody",1204,G__TEGGenDict_298_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecTwoBody), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenDecay",768,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenWCosThDecay",1336,G__TEGGenDict_298_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "calculates final state from W and cos(thetaCM)", (void*) NULL, 1);
   G__memfunc_setup("GenE1Theta1Decay",1437,G__TEGGenDict_298_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "calculates final state from E1 and theta1", (void*) NULL, 1);
   G__memfunc_setup("SetDistParticle",1524,G__TEGGenDict_298_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - dp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsWCosTh",1056,G__TEGGenDict_298_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsE1Theta1",1157,G__TEGGenDict_298_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEGGenDict_298_0_8, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGDecTwoBody::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_298_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDecTwoBody::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_298_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGDecTwoBody::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_298_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGDecTwoBody::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_298_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_298_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDecTwoBody::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_298_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDecTwoBody::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_298_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDecTwoBody::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_298_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDecTwoBody::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEGDecTwoBody", 1204, G__TEGGenDict_298_0_20, (int) ('i'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecTwoBody), -1, 0, 1, 1, 1, 0, "u 'TEGDecTwoBody' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEGDecTwoBody", 1330, G__TEGGenDict_298_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_298_0_22, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDecTwoBody), -1, 1, 1, 1, 1, 0, "u 'TEGDecTwoBody' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGReaction(void) {
   /* TEGReaction */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGReaction));
   G__memfunc_setup("Decay",486,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "this is an abstract class", (void*) NULL, 3);
   G__memfunc_setup("Initialise",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetReactionMass",1513,G__TEGGenDict_299_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateReactionMass",2036,G__TEGGenDict_299_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetBeamSpotSize",1506,G__TEGGenDict_299_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - siz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetLength",1525,G__TEGGenDict_299_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - len", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetPos",1221,G__TEGGenDict_299_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector3' - 0 - pos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcVertex",1009,G__TEGGenDict_299_0_10, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TVector3), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetP4I1",542,G__TEGGenDict_299_0_11, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP4I2",543,G__TEGGenDict_299_0_12, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TLorentzVector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitial1",1063,G__TEGGenDict_299_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEGParticle' - 0 - i1", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetInitial2",1064,G__TEGGenDict_299_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEGParticle' - 0 - i2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetInitial1",1051,G__TEGGenDict_299_0_15, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInitial2",1052,G__TEGGenDict_299_0_16, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEGGenDict_299_0_17, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGReaction::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_299_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGReaction::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_299_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGReaction::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_299_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGReaction::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_299_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_299_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGReaction::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_299_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGReaction::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_299_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGReaction::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_299_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGReaction::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TEGReaction", 1171, G__TEGGenDict_299_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_299_0_30, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGReaction), -1, 1, 1, 1, 1, 0, "u 'TEGReaction' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGDistDsigDt(void) {
   /* TEGDistDsigDt */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDt));
   G__memfunc_setup("TEGDistDsigDt",1203,G__TEGGenDict_300_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDt), -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 '5' b d - 'Double_t' 0 '-1' min "
"d - 'Double_t' 0 '-1' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateRandom",1420,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialise",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetCosTh",769,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", "now depends on R,M,G", (void*) NULL, 1);
   G__memfunc_setup("SetReaction",1121,G__TEGGenDict_300_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TEGReaction' - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SettDist",820,G__TEGGenDict_300_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF1' - 0 - dist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GettDist",808,G__TEGGenDict_300_0_7, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TF1), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Gett",404,G__TEGGenDict_300_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GettMax",698,G__TEGGenDict_300_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SettMax",710,G__TEGGenDict_300_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GettMin",696,G__TEGGenDict_300_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SettMin",708,G__TEGGenDict_300_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - min", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEGGenDict_300_0_13, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGDistDsigDt::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_300_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDistDsigDt::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_300_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGDistDsigDt::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_300_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGDistDsigDt::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_300_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_300_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDistDsigDt::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_300_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDistDsigDt::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_300_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDistDsigDt::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_300_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDistDsigDt::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEGDistDsigDt", 1203, G__TEGGenDict_300_0_25, (int) ('i'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDt), -1, 0, 1, 1, 1, 0, "u 'TEGDistDsigDt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEGDistDsigDt", 1329, G__TEGGenDict_300_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_300_0_27, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistDsigDt), -1, 1, 1, 1, 1, 0, "u 'TEGDistDsigDt' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGDistEScat(void) {
   /* TEGDistEScat */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistEScat));
   G__memfunc_setup("TEGDistEScat",1092,G__TEGGenDict_301_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistEScat), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GenerateRandom",1420,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Set2Distribution",1630,G__TEGGenDict_301_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TF2' - 0 - f2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Initialise",1035,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Get2Distribution",1618,G__TEGGenDict_301_0_5, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TF2), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetE0",417,G__TEGGenDict_301_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - e0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsWThe",864,G__TEGGenDict_301_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsScatETh",1140,G__TEGGenDict_301_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsElastic",1197,G__TEGGenDict_301_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Flux_W_The",981,G__TEGGenDict_301_0_10, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - - D - 'Double_t' 0 - -", "using reaction invariant mass and scat electron theta", (void*) NULL, 0);
   G__memfunc_setup("Flux_ScatETh",1162,G__TEGGenDict_301_0_11, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - - D - 'Double_t' 0 - -", "using scat electron energy and theta", (void*) NULL, 0);
   G__memfunc_setup("GPol",370,G__TEGGenDict_301_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcKinematics",1403,G__TEGGenDict_301_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEGGenDict_301_0_14, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGDistEScat::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_301_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDistEScat::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_301_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGDistEScat::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_301_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGDistEScat::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_301_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_301_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDistEScat::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_301_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDistEScat::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_301_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGDistEScat::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_301_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGDistEScat::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEGDistEScat", 1092, G__TEGGenDict_301_0_26, (int) ('i'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistEScat), -1, 0, 1, 1, 1, 0, "u 'TEGDistEScat' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEGDistEScat", 1218, G__TEGGenDict_301_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_301_0_28, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGDistEScat), -1, 1, 1, 1, 1, 0, "u 'TEGDistEScat' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGElectroReaction(void) {
   /* TEGElectroReaction */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction));
   G__memfunc_setup("TEGElectroReaction",1763,G__TEGGenDict_302_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TEGElectroReaction",1763,G__TEGGenDict_302_0_2, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Decay",486,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenerateReactionMass",2036,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddToEvent",974,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - -", "Add to list to be saved", (void*) NULL, 1);
   G__memfunc_setup("GetGammaStar",1181,G__TEGGenDict_302_0_6, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TEGParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEGGenDict_302_0_7, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGElectroReaction::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_302_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGElectroReaction::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_302_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGElectroReaction::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_302_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGElectroReaction::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_302_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_302_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGElectroReaction::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_302_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGElectroReaction::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_302_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGElectroReaction::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_302_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGElectroReaction::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEGElectroReaction", 1763, G__TEGGenDict_302_0_19, (int) ('i'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction), -1, 0, 1, 1, 1, 0, "u 'TEGElectroReaction' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEGElectroReaction", 1889, G__TEGGenDict_302_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_302_0_21, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGElectroReaction), -1, 1, 1, 1, 1, 0, "u 'TEGElectroReaction' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGOutAll(void) {
   /* TEGOutAll */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutAll));
   G__memfunc_setup("TEGOutAll",817,G__TEGGenDict_627_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutAll), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "intialisation, create file, ouput object etc", (void*) NULL, 1);
   G__memfunc_setup("SaveEvent",913,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "write event data", (void*) NULL, 1);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "close output", (void*) NULL, 1);
   G__memfunc_setup("SetOnlyTrackFinal",1709,G__TEGGenDict_627_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' on", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__TEGGenDict_627_0_6, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGOutAll::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_627_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGOutAll::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_627_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGOutAll::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_627_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGOutAll::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_627_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_627_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGOutAll::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_627_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGOutAll::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_627_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGOutAll::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_627_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGOutAll::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEGOutAll", 817, G__TEGGenDict_627_0_18, (int) ('i'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutAll), -1, 0, 1, 1, 1, 0, "u 'TEGOutAll' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEGOutAll", 943, G__TEGGenDict_627_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_627_0_20, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutAll), -1, 1, 1, 1, 1, 0, "u 'TEGOutAll' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGOutGEMC(void) {
   /* TEGOutGEMC */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutGEMC));
   G__memfunc_setup("TEGOutGEMC",820,G__TEGGenDict_628_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutGEMC), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "intialisation, create file, ouput object etc", (void*) NULL, 1);
   G__memfunc_setup("SaveEvent",913,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "write event data", (void*) NULL, 1);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "close output", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__TEGGenDict_628_0_5, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGOutGEMC::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_628_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGOutGEMC::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_628_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGOutGEMC::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_628_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGOutGEMC::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_628_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_628_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGOutGEMC::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_628_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGOutGEMC::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_628_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGOutGEMC::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_628_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGOutGEMC::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TEGOutGEMC", 946, G__TEGGenDict_628_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGOutLorentz(void) {
   /* TEGOutLorentz */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutLorentz));
   G__memfunc_setup("TEGOutLorentz",1286,G__TEGGenDict_629_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutLorentz), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "intialisation, create file, ouput object etc", (void*) NULL, 1);
   G__memfunc_setup("SaveEvent",913,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "write event data", (void*) NULL, 1);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "close output", (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__TEGGenDict_629_0_5, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGOutLorentz::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_629_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGOutLorentz::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_629_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGOutLorentz::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_629_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGOutLorentz::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_629_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_629_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGOutLorentz::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_629_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGOutLorentz::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_629_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGOutLorentz::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_629_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGOutLorentz::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEGOutLorentz", 1286, G__TEGGenDict_629_0_17, (int) ('i'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutLorentz), -1, 0, 1, 1, 1, 0, "u 'TEGOutLorentz' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEGOutLorentz", 1412, G__TEGGenDict_629_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_629_0_19, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGOutLorentz), -1, 1, 1, 1, 1, 0, "u 'TEGOutLorentz' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTEGPhotoReaction(void) {
   /* TEGPhotoReaction */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction));
   G__memfunc_setup("TEGPhotoReaction",1567,G__TEGGenDict_630_0_1, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TEGPhotoReaction",1567,G__TEGGenDict_630_0_2, 105, G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Decay",486,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GenerateReactionMass",2036,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetWLimits",1013,G__TEGGenDict_630_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__TEGGenDict_630_0_6, 85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TEGPhotoReaction::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__TEGGenDict_630_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGPhotoReaction::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__TEGGenDict_630_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TEGPhotoReaction::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__TEGGenDict_630_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TEGPhotoReaction::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__TEGGenDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__TEGGenDict_630_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__TEGGenDict_630_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGPhotoReaction::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__TEGGenDict_630_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGPhotoReaction::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__TEGGenDict_630_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TEGPhotoReaction::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__TEGGenDict_630_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TEGPhotoReaction::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TEGPhotoReaction", 1567, G__TEGGenDict_630_0_18, (int) ('i'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction), -1, 0, 1, 1, 1, 0, "u 'TEGPhotoReaction' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TEGPhotoReaction", 1693, G__TEGGenDict_630_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__TEGGenDict_630_0_20, (int) ('u'), G__get_linked_tagnum(&G__TEGGenDictLN_TEGPhotoReaction), -1, 1, 1, 1, 1, 0, "u 'TEGPhotoReaction' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncTEGGenDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
   G__memvar_setup((void*)(&gEGRandom),85,0,0,G__get_linked_tagnum(&G__TEGGenDictLN_TRandom3),-1,-1,1,"gEGRandom=",0,(char*)NULL);
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalTEGGenDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcTEGGenDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__TEGGenDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__TEGGenDictLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGParticle = { "TEGParticle" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGDistribution = { "TEGDistribution" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGDecay = { "TEGDecay" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TParticlePDG = { "TParticlePDG" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TDatabasePDG = { "TDatabasePDG" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGGenerator = { "TEGGenerator" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGOutput = { "TEGOutput" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TF2 = { "TF2" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGDistDsigDOmega = { "TEGDistDsigDOmega" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGDecElElasticRad = { "TEGDecElElasticRad" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGDecTwoBody = { "TEGDecTwoBody" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGReaction = { "TEGReaction" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGDistDsigDt = { "TEGDistDsigDt" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGDistEScat = { "TEGDistEScat" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGElectroReaction = { "TEGElectroReaction" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGOutAll = { "TEGOutAll" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGOutGEMC = { "TEGOutGEMC" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGOutLorentz = { "TEGOutLorentz" , 99 , -1 };
G__linked_taginfo G__TEGGenDictLN_TEGPhotoReaction = { "TEGPhotoReaction" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableTEGGenDict() {
  G__TEGGenDictLN_TClass.tagnum = -1 ;
  G__TEGGenDictLN_TBuffer.tagnum = -1 ;
  G__TEGGenDictLN_TMemberInspector.tagnum = -1 ;
  G__TEGGenDictLN_TObject.tagnum = -1 ;
  G__TEGGenDictLN_TNamed.tagnum = -1 ;
  G__TEGGenDictLN_TString.tagnum = -1 ;
  G__TEGGenDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__TEGGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__TEGGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEGGenDictLN_TObjArray.tagnum = -1 ;
  G__TEGGenDictLN_TClonesArray.tagnum = -1 ;
  G__TEGGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__TEGGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__TEGGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__TEGGenDictLN_TArrayI.tagnum = -1 ;
  G__TEGGenDictLN_TRandom3.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__TEGGenDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__TEGGenDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__TEGGenDictLN_TVector3.tagnum = -1 ;
  G__TEGGenDictLN_TLorentzVector.tagnum = -1 ;
  G__TEGGenDictLN_TEGParticle.tagnum = -1 ;
  G__TEGGenDictLN_TEGDistribution.tagnum = -1 ;
  G__TEGGenDictLN_TEGDecay.tagnum = -1 ;
  G__TEGGenDictLN_TF1.tagnum = -1 ;
  G__TEGGenDictLN_TParticlePDG.tagnum = -1 ;
  G__TEGGenDictLN_TDatabasePDG.tagnum = -1 ;
  G__TEGGenDictLN_TEGGenerator.tagnum = -1 ;
  G__TEGGenDictLN_TEGOutput.tagnum = -1 ;
  G__TEGGenDictLN_TArrayD.tagnum = -1 ;
  G__TEGGenDictLN_TF2.tagnum = -1 ;
  G__TEGGenDictLN_TH2.tagnum = -1 ;
  G__TEGGenDictLN_TEGDistDsigDOmega.tagnum = -1 ;
  G__TEGGenDictLN_TEGDecElElasticRad.tagnum = -1 ;
  G__TEGGenDictLN_TEGDecTwoBody.tagnum = -1 ;
  G__TEGGenDictLN_TEGReaction.tagnum = -1 ;
  G__TEGGenDictLN_TEGDistDsigDt.tagnum = -1 ;
  G__TEGGenDictLN_TEGDistEScat.tagnum = -1 ;
  G__TEGGenDictLN_TEGElectroReaction.tagnum = -1 ;
  G__TEGGenDictLN_TFile.tagnum = -1 ;
  G__TEGGenDictLN_TTree.tagnum = -1 ;
  G__TEGGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__TEGGenDictLN_TEGOutAll.tagnum = -1 ;
  G__TEGGenDictLN_TEGOutGEMC.tagnum = -1 ;
  G__TEGGenDictLN_TEGOutLorentz.tagnum = -1 ;
  G__TEGGenDictLN_TEGPhotoReaction.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableTEGGenDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TString);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TRandom3);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGParticle),sizeof(TEGParticle),-1,324864,(char*)NULL,G__setup_memvarTEGParticle,G__setup_memfuncTEGParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGDistribution),sizeof(TEGDistribution),-1,263424,(char*)NULL,G__setup_memvarTEGDistribution,G__setup_memfuncTEGDistribution);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGDecay),sizeof(TEGDecay),-1,324864,(char*)NULL,G__setup_memvarTEGDecay,G__setup_memfuncTEGDecay);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TF1);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TParticlePDG);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TDatabasePDG);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGGenerator),sizeof(TEGGenerator),-1,292096,(char*)NULL,G__setup_memvarTEGGenerator,G__setup_memfuncTEGGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGOutput),sizeof(TEGOutput),-1,263427,(char*)NULL,G__setup_memvarTEGOutput,G__setup_memfuncTEGOutput);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TF2);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TH2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGDistDsigDOmega),sizeof(TEGDistDsigDOmega),-1,263424,(char*)NULL,G__setup_memvarTEGDistDsigDOmega,G__setup_memfuncTEGDistDsigDOmega);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGDecElElasticRad),sizeof(TEGDecElElasticRad),-1,324864,(char*)NULL,G__setup_memvarTEGDecElElasticRad,G__setup_memfuncTEGDecElElasticRad);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGDecTwoBody),sizeof(TEGDecTwoBody),-1,324864,(char*)NULL,G__setup_memvarTEGDecTwoBody,G__setup_memfuncTEGDecTwoBody);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGReaction),sizeof(TEGReaction),-1,324865,(char*)NULL,G__setup_memvarTEGReaction,G__setup_memfuncTEGReaction);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGDistDsigDt),sizeof(TEGDistDsigDt),-1,263424,(char*)NULL,G__setup_memvarTEGDistDsigDt,G__setup_memfuncTEGDistDsigDt);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGDistEScat),sizeof(TEGDistEScat),-1,263424,(char*)NULL,G__setup_memvarTEGDistEScat,G__setup_memfuncTEGDistEScat);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGElectroReaction),sizeof(TEGElectroReaction),-1,324864,(char*)NULL,G__setup_memvarTEGElectroReaction,G__setup_memfuncTEGElectroReaction);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__TEGGenDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGOutAll),sizeof(TEGOutAll),-1,263424,(char*)NULL,G__setup_memvarTEGOutAll,G__setup_memfuncTEGOutAll);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGOutGEMC),sizeof(TEGOutGEMC),-1,263424,(char*)NULL,G__setup_memvarTEGOutGEMC,G__setup_memfuncTEGOutGEMC);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGOutLorentz),sizeof(TEGOutLorentz),-1,263424,(char*)NULL,G__setup_memvarTEGOutLorentz,G__setup_memfuncTEGOutLorentz);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__TEGGenDictLN_TEGPhotoReaction),sizeof(TEGPhotoReaction),-1,324864,(char*)NULL,G__setup_memvarTEGPhotoReaction,G__setup_memfuncTEGPhotoReaction);
}
extern "C" void G__cpp_setupTEGGenDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupTEGGenDict()");
  G__set_cpp_environmentTEGGenDict();
  G__cpp_setup_tagtableTEGGenDict();

  G__cpp_setup_inheritanceTEGGenDict();

  G__cpp_setup_typetableTEGGenDict();

  G__cpp_setup_memvarTEGGenDict();

  G__cpp_setup_memfuncTEGGenDict();
  G__cpp_setup_globalTEGGenDict();
  G__cpp_setup_funcTEGGenDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncTEGGenDict();
  return;
}
class G__cpp_setup_initTEGGenDict {
  public:
    G__cpp_setup_initTEGGenDict() { G__add_setup_func("TEGGenDict",(G__incsetup)(&G__cpp_setupTEGGenDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initTEGGenDict() { G__remove_setup_func("TEGGenDict"); }
};
G__cpp_setup_initTEGGenDict G__cpp_setup_initializerTEGGenDict;

